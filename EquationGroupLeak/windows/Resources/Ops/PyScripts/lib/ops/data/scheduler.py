
from ops.data import OpsClass, OpsField, DszObject, DszCommandObject, cmd_definitions
import dsz
if ('scheduler' not in cmd_definitions):
    dsztaskinfo = OpsClass('taskinginfo', {'recursive': OpsField('recursive', dsz.TYPE_BOOL), 'tasktype': OpsClass('tasktype', {'value': OpsField('value', dsz.TYPE_STRING)}, DszObject), 'searchparam': OpsClass('searchparam', {'value': OpsField('value', dsz.TYPE_STRING)}, DszObject), 'target': OpsClass('target', {'local': OpsField('local', dsz.TYPE_BOOL), 'location': OpsField('location', dsz.TYPE_BOOL)}, DszObject)}, DszObject)
    dszatjob = OpsClass('atjob', {'id': OpsField('id', dsz.TYPE_INT), 'time': OpsField('time', dsz.TYPE_STRING), 'weekday': OpsField('weekday', dsz.TYPE_STRING), 'month': OpsField('month', dsz.TYPE_STRING), 'frequency': OpsField('frequency', dsz.TYPE_STRING), 'commandtext': OpsField('commandtext', dsz.TYPE_STRING)}, DszObject, single=False)
    dsznewjob = OpsClass('newjob', {'id': OpsField('id', dsz.TYPE_INT), 'name': OpsField('name', dsz.TYPE_STRING)}, DszObject, single=False)
    dsznetjob = OpsClass('netjob', {'exitcode': OpsField('exitcode', dsz.TYPE_INT), 'application': OpsField('application', dsz.TYPE_STRING), 'jobname': OpsField('jobname', dsz.TYPE_STRING), 'nextruntime': OpsField('nextruntime', dsz.TYPE_STRING), 'nextrundate': OpsField('nextrundate', dsz.TYPE_STRING), 'flagsmask': OpsField('flagsmask', dsz.TYPE_STRING), 'account': OpsField('account', dsz.TYPE_STRING), 'parameters': OpsField('parameters', dsz.TYPE_STRING), 'trigger': OpsClass('trigger', {'triggerstring': OpsField('triggerstring', dsz.TYPE_STRING)}, DszObject)}, DszObject, single=False)
    dszfolder = OpsClass('folder', {'name': OpsField('name', dsz.TYPE_STRING), 'path': OpsField('path', dsz.TYPE_STRING), 'job': OpsClass('job', {'disabled': OpsField('disabled', dsz.TYPE_BOOL), 'nummissedruns': OpsField('nummissedruns', dsz.TYPE_INT), 'lastrunresult': OpsField('lastrunresult', dsz.TYPE_INT), 'compatibility': OpsField('compatibility', dsz.TYPE_STRING), 'name': OpsField('name', dsz.TYPE_STRING), 'state': OpsField('state', dsz.TYPE_STRING), 'path': OpsField('path', dsz.TYPE_STRING), 'xml': OpsField('xml', dsz.TYPE_STRING), 'trigger': OpsClass('trigger', {'enabled': OpsField('enabled', dsz.TYPE_BOOL), 'id': OpsField('id', dsz.TYPE_INT), 'startboundary': OpsField('startboundary', dsz.TYPE_STRING), 'endboundary': OpsField('endboundary', dsz.TYPE_STRING), 'type': OpsField('type', dsz.TYPE_STRING)}, DszObject, single=False), 'principal': OpsClass('principal', {'id': OpsField('id', dsz.TYPE_STRING), 'logontype': OpsField('logontype', dsz.TYPE_STRING), 'userid': OpsField('userid', dsz.TYPE_STRING), 'groupid': OpsField('groupid', dsz.TYPE_STRING), 'runlevel': OpsField('runlevel', dsz.TYPE_STRING), 'displayname': OpsField('displayname', dsz.TYPE_STRING)}, DszObject), 'lastruntime': OpsClass('lastruntime', {'time': OpsField('time', dsz.TYPE_STRING), 'date': OpsField('date', dsz.TYPE_STRING), 'type': OpsField('type', dsz.TYPE_STRING)}, DszObject), 'nextruntime': OpsClass('nextruntime', {'time': OpsField('time', dsz.TYPE_STRING), 'date': OpsField('date', dsz.TYPE_STRING), 'type': OpsField('type', dsz.TYPE_STRING)}, DszObject), 'action': OpsClass('action', {'id': OpsField('id', dsz.TYPE_STRING), 'type': OpsField('type', dsz.TYPE_STRING), 'execjob': OpsClass('exec', {'path': OpsField('path', dsz.TYPE_STRING), 'arguments': OpsField('arguments', dsz.TYPE_STRING), 'workingdir': OpsField('workingdir', dsz.TYPE_STRING)}, DszObject), 'com': OpsClass('com', {'data': OpsField('data', dsz.TYPE_STRING), 'classid': OpsField('classid', dsz.TYPE_STRING)}, DszObject)}, DszObject, single=False)}, DszObject, single=False)}, DszObject, single=False)
    schedulercommand = OpsClass('scheduler', {'taskinginfo': dsztaskinfo, 'newjob': dsznewjob, 'netjob': dsznetjob, 'atjob': dszatjob, 'folder': dszfolder}, DszCommandObject)
    cmd_definitions['scheduler'] = schedulercommand